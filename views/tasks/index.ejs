<%- include('../partials/header', { title: title }) %>

<%- include('../partials/task-header', {
    pageTitle: '‰ªªÂä°ÂàóË°®',
    currentView: 'list',
    currentPath: '/tasks',
    filters: filters,
    projectMembers: projectMembers
}) %>

<!-- ‰ªªÂä°ÂàóË°® -->
<div class="row">
    <div class="col-12">
        <div id="tasksList">
            <% if (tasks && tasks.length > 0) { %>
                <% tasks.forEach(function(task) { %>
                    <div class="card mb-1 task-card">
                        <div class="card-body py-1 px-2">
                            <div class="row align-items-center">
                                <!-- ‰ªªÂä°Ê†áÈ¢òÂíåÊòüÁ∫ß -->
                                <div class="col-md-6">
                                    <div class="d-flex align-items-center">
                                        <span class="badge bg-<%=
                                            task.taskType === 'requirement' ? 'info' :
                                            task.taskType === 'epic' ? 'purple' :
                                            task.taskType === 'story' ? 'primary' :
                                            task.taskType === 'dev_task' ? 'primary' :
                                            task.taskType === 'design_task' ? 'success' :
                                            task.taskType === 'test_task' ? 'warning' :
                                            task.taskType === 'devops_task' ? 'dark' :
                                            task.taskType === 'bug' ? 'danger' : 'secondary'
                                        %> me-2 task-type-badge">
                                            <%= task.taskType === 'requirement' ? 'üìã ÈúÄÊ±Ç' :
                                                task.taskType === 'epic' ? 'üè∞ Âè≤ËØó' :
                                                task.taskType === 'story' ? 'üìñ ÊïÖ‰∫ã' :
                                                task.taskType === 'dev_task' ? '‚öîÔ∏è ÂºÄÂèë' :
                                                task.taskType === 'design_task' ? 'üé® ËÆæËÆ°' :
                                                task.taskType === 'test_task' ? 'üèπ ÊµãËØï' :
                                                task.taskType === 'devops_task' ? '‚öôÔ∏è ËøêÁª¥' :
                                                task.taskType === 'bug' ? 'üêõ Áº∫Èô∑' : 'üìù ‰ªªÂä°' %>
                                        </span>
                                        <h6 class="card-title mb-0 me-2 text-truncate" style="max-width: 520px;">
                                            <a href="/tasks/<%= task.id %>" class="text-decoration-none task-title-link">
                                                <%= task.title %>
                                            </a>
                                        </h6>
                                        <span class="badge bg-warning">
                                            <% for(let i = 0; i < task.starLevel; i++) { %>‚≠ê<% } %>
                                        </span>
                                    </div>
                                </div>

                                <!-- Âø´ÈÄüÁºñËæëÂ≠óÊÆµ -->
                                <div class="col-md-1">
                                    <select class="form-select form-select-sm quick-edit-field"
                                            data-task-id="<%= task.id %>"
                                            data-field="status">
                                        <option value="draft" <%= task.status === 'draft' ? 'selected' : '' %>>ËçâÁ®ø</option>
                                        <option value="published" <%= task.status === 'published' ? 'selected' : '' %>>Â∑≤ÂèëÂ∏É</option>
                                        <option value="bidding" <%= task.status === 'bidding' ? 'selected' : '' %>>Á´ûÊ†á‰∏≠</option>
                                        <option value="assigned" <%= task.status === 'assigned' ? 'selected' : '' %>>Â∑≤ÂàÜÈÖç</option>
                                        <option value="in_progress" <%= task.status === 'in_progress' ? 'selected' : '' %>>ËøõË°å‰∏≠</option>
                                        <option value="review" <%= task.status === 'review' ? 'selected' : '' %>>ÂæÖÂÆ°Ê†∏</option>
                                        <option value="completed" <%= task.status === 'completed' ? 'selected' : '' %>>Â∑≤ÂÆåÊàê</option>
                                        <option value="cancelled" <%= task.status === 'cancelled' ? 'selected' : '' %>>Â∑≤ÂèñÊ∂à</option>
                                    </select>
                                </div>
                                <div class="col-md-1">
                                    <select class="form-select form-select-sm quick-edit-field"
                                            data-task-id="<%= task.id %>"
                                            data-field="assigneeId">
                                        <option value="">Êú™ÂàÜÈÖç</option>
                                        <% if (task.project && task.project.members) { %>
                                            <% task.project.members.forEach(function(member) { %>
                                                <option value="<%= member.id %>" <%= task.assigneeId === member.id ? 'selected' : '' %>>
                                                    <%= (member.firstName + ' ' + member.lastName).trim() || member.username %>
                                                </option>
                                            <% }); %>
                                        <% } %>
                                    </select>
                                </div>
                                <div class="col-md-1">
                                    <select class="form-select form-select-sm quick-edit-field"
                                            data-task-id="<%= task.id %>"
                                            data-field="urgencyLevel">
                                        <option value="urgent" <%= task.urgencyLevel === 'urgent' ? 'selected' : '' %>>üî• Á¥ßÊÄ•</option>
                                        <option value="important" <%= task.urgencyLevel === 'important' ? 'selected' : '' %>>‚ö° ÈáçË¶Å</option>
                                        <option value="normal" <%= task.urgencyLevel === 'normal' ? 'selected' : '' %>>üìÖ ÊôÆÈÄö</option>
                                        <option value="delayed" <%= task.urgencyLevel === 'delayed' ? 'selected' : '' %>>üïê Âª∂Êúü</option>
                                        <option value="frozen" <%= task.urgencyLevel === 'frozen' ? 'selected' : '' %>>‚ùÑÔ∏è ÂÜªÁªì</option>
                                    </select>
                                </div>

                                <!-- ‰ªªÂä°‰ø°ÊÅØ -->
                                <div class="col-md-2">
                                    <small class="text-muted">
                                        <div><i class="fas fa-user me-1"></i><%= task.publisher ? (task.publisher.firstName + ' ' + task.publisher.lastName).trim() || task.publisher.username : 'Êú™Áü•' %></div>
                                        <% if (task.estimatedHours || task.dueDate) { %>
                                            <div>
                                                <% if (task.estimatedHours) { %>
                                                    <i class="fas fa-clock me-1"></i><%= task.estimatedHours %>h
                                                <% } %>
                                                <% if (task.dueDate) { %>
                                                    <i class="fas fa-calendar ms-1 me-1"></i><%= new Date(task.dueDate).toLocaleDateString('zh-CN') %>
                                                <% } %>
                                            </div>
                                        <% } %>
                                        <!-- ËøõÂ∫¶Êù° -->
                                        <% const progress = task.progress || 0; %>
                                        <div class="mt-1">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-chart-line me-1"></i>
                                                <div class="progress flex-grow-1 me-2" style="height: 8px;">
                                                    <div class="progress-bar
                                                        <% if (progress === 0) { %>bg-secondary
                                                        <% } else if (progress < 25) { %>bg-info
                                                        <% } else if (progress < 50) { %>bg-primary
                                                        <% } else if (progress < 75) { %>bg-warning
                                                        <% } else if (progress < 100) { %>bg-success
                                                        <% } else { %>bg-success
                                                        <% } %>"
                                                        role="progressbar"
                                                        style="width: <%= progress %>%;"
                                                        aria-valuenow="<%= progress %>"
                                                        aria-valuemin="0"
                                                        aria-valuemax="100">
                                                    </div>
                                                </div>
                                                <span class="text-nowrap" style="font-size: 0.75rem;"><%= progress %>%</span>
                                            </div>
                                        </div>
                                    </small>
                                </div>

                                <!-- Êìç‰ΩúÊåâÈíÆ -->
                                <div class="col-md-1 text-end">
                                    <div class="dropdown">
                                        <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="fas fa-ellipsis-h"></i>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item" href="/tasks/<%= task.id %>">
                                                <i class="fas fa-eye me-2"></i>Êü•ÁúãËØ¶ÊÉÖ
                                            </a></li>
                                            <li><a class="dropdown-item" href="/tasks/create?parent=<%= task.id %>">
                                                <i class="fas fa-plus me-2"></i>Ê∑ªÂä†Â≠ê‰ªªÂä°
                                            </a></li>
                                            <% if (user && (user.role === 'admin' || task.publisherId === user.id)) { %>
                                                <li><hr class="dropdown-divider"></li>
                                                <li><a class="dropdown-item" href="/tasks/<%= task.id %>/edit">
                                                    <i class="fas fa-edit me-2"></i>ÁºñËæë
                                                </a></li>
                                                <li><a class="dropdown-item text-danger" href="#" onclick="deleteTask('<%= task.id %>', '<%= task.title %>')">
                                                    <i class="fas fa-trash me-2"></i>Âà†Èô§
                                                </a></li>
                                            <% } %>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="text-center py-5">
                    <i class="fas fa-tasks fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">ÊöÇÊó†‰ªªÂä°</h5>
                    <p class="text-muted mb-3">ÂΩìÂâçÁ≠õÈÄâÊù°‰ª∂‰∏ãÊ≤°ÊúâÊâæÂà∞‰ªªÂä°</p>
                    <a href="/tasks" class="btn btn-outline-primary">
                        <i class="fas fa-refresh me-2"></i>Êü•ÁúãÊâÄÊúâ‰ªªÂä°
                    </a>
                </div>
            <% } %>
        </div>

        <!-- ÂàÜÈ°µ -->
        <% if (pagination && pagination.totalPages > 1) { %>
            <%
                // ÊûÑÂª∫Êü•ËØ¢Â≠óÁ¨¶‰∏≤ÁöÑËæÖÂä©ÂáΩÊï∞
                function buildQueryString(params) {
                    const queryParts = [];
                    Object.keys(params).forEach(key => {
                        if (params[key] && params[key] !== '') {
                            queryParts.push(encodeURIComponent(key) + '=' + encodeURIComponent(params[key]));
                        }
                    });
                    return queryParts.join('&');
                }
            %>
            <nav aria-label="‰ªªÂä°ÂàÜÈ°µ" class="mt-4">
                <ul class="pagination justify-content-center">
                    <% if (pagination.hasPrev) { %>
                        <li class="page-item">
                            <a class="page-link" href="?<%= buildQueryString({...filters, page: pagination.page - 1}) %>">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    <% } %>

                    <% for (let i = Math.max(1, pagination.page - 2); i <= Math.min(pagination.totalPages, pagination.page + 2); i++) { %>
                        <li class="page-item <%= i === pagination.page ? 'active' : '' %>">
                            <a class="page-link" href="?<%= buildQueryString({...filters, page: i}) %>">
                                <%= i %>
                            </a>
                        </li>
                    <% } %>

                    <% if (pagination.hasNext) { %>
                        <li class="page-item">
                            <a class="page-link" href="?<%= buildQueryString({...filters, page: pagination.page + 1}) %>">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    <% } %>
                </ul>

                <div class="text-center mt-2">
                    <small class="text-muted">
                        Á¨¨ <%= pagination.page %> È°µÔºåÂÖ± <%= pagination.totalPages %> È°µÔºåÊÄªËÆ° <%= pagination.total %> ‰∏™‰ªªÂä°
                    </small>
                </div>
            </nav>
        <% } %>
    </div>
</div>





<style>
.quick-edit-field.loading {
    opacity: 0.6;
    pointer-events: none;
}

.quick-edit-field.loading::after {
    content: '';
    position: absolute;
    top: 50%;
    right: 10px;
    width: 16px;
    height: 16px;
    margin-top: -8px;
    border: 2px solid #ccc;
    border-top-color: #007bff;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

.task-card {
    transition: box-shadow 0.2s ease;
}

.task-card:hover {
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.task-card .card-body {
    padding: 0.75rem 1rem;
    min-height: 60px;
}

.task-card .card-title {
    font-size: 1rem;
    font-weight: 600;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.task-card .badge {
    font-size: 0.75em;
    padding: 0.25em 0.5em;
}

.task-type-badge {
    font-size: 0.8em !important;
    padding: 0.4em 0.6em !important;
    font-weight: 500 !important;
    min-width: 60px;
    text-align: center;
}

/* Ëá™ÂÆö‰πâÁ¥´Ëâ≤ËÉåÊôØ */
.bg-purple {
    background-color: #6f42c1 !important;
    color: white !important;
}

.task-card small {
    font-size: 0.875rem;
    line-height: 1.4;
}

.task-card .form-select-sm {
    font-size: 0.9rem;
    padding: 0.375rem 0.75rem;
    height: auto;
    min-height: 32px;
}

.task-card .dropdown-toggle {
    padding: 0.375rem 0.75rem;
    font-size: 0.9rem;
    min-height: 32px;
}

.task-card .row {
    min-height: 40px;
}

.task-title-link {
    color: #212529 !important;
    transition: color 0.2s ease;
}

.task-title-link:hover {
    color: #0d6efd !important;
    text-decoration: underline !important;
}

/* ‰∏ãÊãâËèúÂçïÂ±ÇÁ∫ß‰øÆÂ§ç - Ëß£ÂÜ≥Ë¢´ÈÅÆÊå°ÈóÆÈ¢ò */
.dropdown-menu {
    z-index: 1050 !important;
}

/* ÂΩì‰∏ãÊãâËèúÂçïÊâìÂºÄÊó∂ÔºåÊèêÂçáÊï¥‰∏™‰ªªÂä°Âç°ÁâáÁöÑÂ±ÇÁ∫ß */
.task-card:has(.dropdown.show),
.task-card.dropdown-active {
    z-index: 1051 !important;
    position: relative;
}

/* Á°Æ‰øù‰∏ãÊãâËèúÂçïÂÆπÂô®ÊúâË∂≥Â§üÁöÑÂ±ÇÁ∫ß */
.task-card .dropdown.show {
    z-index: 1052 !important;
    position: relative;
}
</style>

<script>
$(document).ready(function() {
    // Á≠õÈÄâË°®ÂçïËá™Âä®Êèê‰∫§ÔºàÂΩìÈÄâÊã©Ê°ÜÊîπÂèòÊó∂Ôºâ
    $('#filterForm select').change(function() {
        $('#filterForm').submit();
    });

    // ÂàùÂßãÂåñÂø´ÈÄüÁºñËæëÂ≠óÊÆµÔºå‰øùÂ≠òÂéüÂßãÂÄº
    $('.quick-edit-field').each(function() {
        const $select = $(this);
        $select.data('original-value', $select.val());
    });

    // ÂàùÂßãÂåñ‰∏ãÊãâËèúÂçïÂÆö‰Ωç‰øÆÂ§ç
    initDropdownFix();

    // Âø´ÈÄüÁºñËæëÂ≠óÊÆµÂ§ÑÁêÜ
    $('.quick-edit-field').change(function() {
        const $select = $(this);
        const taskId = $select.data('task-id');
        const field = $select.data('field');
        const value = $select.val();
        const originalValue = $select.data('original-value');

        console.log('Âø´ÈÄüÁºñËæëËß¶Âèë:', { taskId, field, value, originalValue });

        // Á¶ÅÁî®ÈÄâÊã©Ê°ÜÂπ∂ÊòæÁ§∫Âä†ËΩΩÁä∂ÊÄÅ
        $select.prop('disabled', true);
        $select.addClass('loading');

        // ÂèëÈÄÅAJAXËØ∑Ê±Ç
        $.ajax({
            url: `/tasks/${taskId}/quick-update`,
            method: 'POST',
            dataType: 'json',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            data: {
                field: field,
                value: value
            },
            beforeSend: function(xhr) {
                console.log('ÂèëÈÄÅAJAXËØ∑Ê±Ç:', `/tasks/${taskId}/quick-update`);
            },
            success: function(response) {
                console.log('AJAXÊàêÂäüÂìçÂ∫î:', response);
                if (response.success) {
                    // ÊòæÁ§∫ÊàêÂäüÊèêÁ§∫
                    showToast('success', response.message);
                    // Êõ¥Êñ∞ÂéüÂßãÂÄº
                    $select.data('original-value', value);
                } else {
                    // ÊÅ¢Â§çÂéüÂßãÂÄº
                    $select.val($select.data('original-value'));
                    showToast('error', response.message || 'Êõ¥Êñ∞Â§±Ë¥•');
                }
            },
            error: function(xhr, status, error) {
                console.error('AJAXÈîôËØØ:', { xhr, status, error });
                console.error('ÂìçÂ∫îÊñáÊú¨:', xhr.responseText);
                // ÊÅ¢Â§çÂéüÂßãÂÄº
                $select.val($select.data('original-value'));
                const errorMsg = xhr.responseJSON?.message || `ÁΩëÁªúÈîôËØØÔºö${error}`;
                showToast('error', errorMsg);
            },
            complete: function() {
                // ÊÅ¢Â§çÈÄâÊã©Ê°ÜÁä∂ÊÄÅ
                $select.prop('disabled', false);
                $select.removeClass('loading');
            }
        });
    });
});

// ÊòæÁ§∫ÊèêÁ§∫Ê∂àÊÅØ
function showToast(type, message) {
    // ÂàõÂª∫ÊèêÁ§∫ÂÖÉÁ¥†
    const toast = $(`
        <div class="toast align-items-center text-white bg-${type === 'success' ? 'success' : 'danger'} border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    <i class="fas fa-${type === 'success' ? 'check' : 'exclamation-triangle'} me-2"></i>
                    ${message}
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    `);

    // Ê∑ªÂä†Âà∞È°µÈù¢
    let toastContainer = $('#toast-container');
    if (toastContainer.length === 0) {
        toastContainer = $('<div id="toast-container" class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1055;"></div>');
        $('body').append(toastContainer);
    }

    toastContainer.append(toast);

    // ÊòæÁ§∫ÊèêÁ§∫
    const bsToast = new bootstrap.Toast(toast[0]);
    bsToast.show();

    // Ëá™Âä®ÁßªÈô§
    toast.on('hidden.bs.toast', function() {
        $(this).remove();
    });
}

// ÂàùÂßãÂåñ‰∏ãÊãâËèúÂçïÂÆö‰Ωç‰øÆÂ§ç
function initDropdownFix() {
    // ÁõëÂê¨ÊâÄÊúâ‰∏ãÊãâËèúÂçïÁöÑÊòæÁ§∫‰∫ã‰ª∂
    $(document).on('show.bs.dropdown', '.task-card .dropdown', function(e) {
        const $dropdown = $(this);
        const $menu = $dropdown.find('.dropdown-menu');

        // Ê†áËÆ∞‰ªªÂä°Âç°Áâá‰∏∫Ê¥ªÂä®Áä∂ÊÄÅÔºåÊèêÂçáz-index
        $dropdown.closest('.task-card').addClass('dropdown-active');

        // ÁÆÄÂåñÂÆö‰ΩçÈÄªËæëÔºåËÆ©BootstrapËá™Â∑±Â§ÑÁêÜÂÆö‰Ωç
        // Âè™ÈúÄË¶ÅÁ°Æ‰øùz-indexË∂≥Â§üÈ´ò
        setTimeout(() => {
            $menu.css({
                zIndex: 10000
            });
        }, 0);
    });

    // ÁõëÂê¨‰∏ãÊãâËèúÂçïÁöÑÈöêËóè‰∫ã‰ª∂
    $(document).on('hide.bs.dropdown', '.task-card .dropdown', function(e) {
        const $dropdown = $(this);

        // ÁßªÈô§‰ªªÂä°Âç°ÁâáÁöÑÊ¥ªÂä®Áä∂ÊÄÅ
        $dropdown.closest('.task-card').removeClass('dropdown-active');
    });
}

// Âà†Èô§‰ªªÂä°ÂáΩÊï∞
function deleteTask(taskId, taskTitle) {
    if (confirm(`Á°ÆÂÆöË¶ÅÂà†Èô§‰ªªÂä°"${taskTitle}"ÂêóÔºü\n\nÊ≠§Êìç‰Ωú‰∏çÂèØÊí§ÈîÄÔºå‰ªªÂä°ÁöÑÊâÄÊúâÁõ∏ÂÖ≥Êï∞ÊçÆÈÉΩÂ∞ÜË¢´Âà†Èô§„ÄÇ`)) {
        // ÂàõÂª∫Ë°®ÂçïÂπ∂Êèê‰∫§
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = `/tasks/${taskId}/delete`;

        // Ê∑ªÂä†CSRF tokenÔºàÂ¶ÇÊûúÈúÄË¶ÅÔºâ
        const csrfToken = document.querySelector('meta[name="csrf-token"]');
        if (csrfToken) {
            const csrfInput = document.createElement('input');
            csrfInput.type = 'hidden';
            csrfInput.name = '_token';
            csrfInput.value = csrfToken.getAttribute('content');
            form.appendChild(csrfInput);
        }

        document.body.appendChild(form);
        form.submit();
    }
}
</script>

<%- include('../partials/footer') %>
