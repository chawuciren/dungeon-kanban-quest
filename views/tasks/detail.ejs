<%- include('../partials/header', { title: title }) %>

<%
// Áªü‰∏ÄÁöÑÁä∂ÊÄÅÈÖçÁΩÆ
const statusConfig = {
    'draft': { text: 'ËçâÁ®ø', class: 'secondary', icon: 'fas fa-edit' },
    'published': { text: 'Â∑≤ÂèëÂ∏É', class: 'primary', icon: 'fas fa-bullhorn' },
    'in_progress': { text: 'ËøõË°å‰∏≠', class: 'warning', icon: 'fas fa-play' },
    'review': { text: 'ÂæÖÂÆ°Ê†∏', class: 'info', icon: 'fas fa-search' },
    'completed': { text: 'Â∑≤ÂÆåÊàê', class: 'success', icon: 'fas fa-check' },
    'cancelled': { text: 'Â∑≤ÂèñÊ∂à', class: 'danger', icon: 'fas fa-times' }
};
const currentStatus = statusConfig[task.status] || statusConfig['draft'];
%>

<div class="row">
        <!-- ‰∏ªË¶ÅÂÜÖÂÆπ -->
        <div class="col-lg-8">
            <!-- ‰ªªÂä°Ê†áÈ¢òÂíåÂü∫Êú¨‰ø°ÊÅØ -->
            <div class="card mb-4">
                <div class="card-body">
                    <!-- Èù¢ÂåÖÂ±ëÂØºËà™ -->
                    <nav aria-label="breadcrumb" class="mb-3">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/tasks">‰ªªÂä°Â∏ÇÂú∫</a></li>
                            <% if (task.project) { %>
                                <li class="breadcrumb-item"><a href="/projects/<%= task.project.id %>"><%= task.project.name %></a></li>
                            <% } %>
                            <% if (task.parentTask) { %>
                                <li class="breadcrumb-item"><a href="/tasks/<%= task.parentTask.id %>"><%= task.parentTask.title %></a></li>
                            <% } %>
                            <li class="breadcrumb-item active"><%= task.title %></li>
                        </ol>
                    </nav>

                    <!-- ËøîÂõûÊåâÈíÆ -->
                    <div class="mb-3">
                        <a href="/tasks" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-2"></i>ËøîÂõû‰ªªÂä°ÂàóË°®
                        </a>
                    </div>

                    <!-- ‰ªªÂä°Ê†áÈ¢ò -->
                    <div class="d-flex justify-content-between align-items-start mb-3">
                        <h2 class="mb-0">
                            <span class="me-2">
                                <%= task.taskType === 'requirement' ? 'üìã' :
                                    task.taskType === 'epic' ? 'üè∞' :
                                    task.taskType === 'story' ? 'üìñ' :
                                    task.taskType === 'dev_task' ? '‚öîÔ∏è' :
                                    task.taskType === 'design_task' ? 'üé®' :
                                    task.taskType === 'test_task' ? 'üèπ' :
                                    task.taskType === 'devops_task' ? '‚öôÔ∏è' :
                                    task.taskType === 'bug' ? 'üêõ' : 'üìù' %>
                            </span>
                            <%= task.title %>
                        </h2>
                        <div class="task-actions">
                            <!-- Êé•ÂçïÊåâÈíÆ -->
                            <% if (canBid) { %>
                                <form action="/tasks/<%= task.id %>/bid" method="POST" style="display: inline;">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-hand-paper me-2"></i>Êé•Âçï
                                    </button>
                                </form>
                            <% } %>

                            <!-- Áä∂ÊÄÅÊìç‰ΩúÊåâÈíÆ -->
                            <% if (user && (task.assigneeId === user.id || task.reviewerId === user.id || user.role === 'admin' || task.publisherId === user.id)) { %>
                                <% if (task.status === 'assigned' && task.assigneeId === user.id) { %>
                                    <form action="/tasks/<%= task.id %>/start" method="POST" style="display: inline;">
                                        <button type="submit" class="btn btn-success">
                                            <i class="fas fa-play me-2"></i>ÂºÄÂßã‰ªªÂä°
                                        </button>
                                    </form>
                                <% } %>

                                <% if (['assigned', 'in_progress'].includes(task.status) && task.assigneeId === user.id) { %>
                                    <button type="button" class="btn btn-warning" onclick="showCompleteModal()">
                                        <i class="fas fa-check me-2"></i>ÂÆåÊàê‰ªªÂä°
                                    </button>
                                <% } %>

                                <% if (task.status === 'review' && task.reviewerId === user.id) { %>
                                    <button type="button" class="btn btn-success" onclick="approveTask()">
                                        <i class="fas fa-check-circle me-2"></i>ÂÆ°Ê†∏ÈÄöËøá
                                    </button>
                                    <button type="button" class="btn btn-danger" onclick="rejectTask()">
                                        <i class="fas fa-times-circle me-2"></i>ÂÆ°Ê†∏ÊãíÁªù
                                    </button>
                                <% } %>
                            <% } %>

                            <!-- ÁÆ°ÁêÜÊåâÈíÆ -->
                            <%
                                // Ê£ÄÊü•ÂΩìÂâçÁî®Êà∑ÊòØÂê¶ÊúâÁºñËæëÊùÉÈôê
                                let canEdit = false;
                                if (user) {
                                    // ÁÆ°ÁêÜÂëòÂßãÁªàÊúâÊùÉÈôê
                                    if (user.role === 'admin') {
                                        canEdit = true;
                                    }
                                    // ÊàëÂàõÂª∫ÁöÑ‰ªªÂä°
                                    else if (task.publisherId === user.id) {
                                        canEdit = true;
                                    }
                                    // ÊàëË¥üË¥£ÁöÑ‰ªªÂä°
                                    else if (task.assigneeId === user.id) {
                                        canEdit = true;
                                    }
                                    // ÊàëÂÆ°Ê†∏ÁöÑ‰ªªÂä°
                                    else if (task.reviewerId === user.id) {
                                        canEdit = true;
                                    }
                                    // È°πÁõÆÊâÄÊúâËÄÖ
                                    else if (task.project && task.project.ownerId === user.id) {
                                        canEdit = true;
                                    }
                                    // È°πÁõÆË¥üË¥£‰∫∫
                                    else if (task.project && task.project.leaderId === user.id) {
                                        canEdit = true;
                                    }
                                }
                            %>
                            <% if (canEdit) { %>
                                <a href="/tasks/<%= task.id %>/edit" class="btn btn-outline-primary">
                                    <i class="fas fa-edit me-2"></i>ÁºñËæë‰ªªÂä°
                                </a>
                            <% } %>

                            <% if (task.level < 3) { %>
                                <a href="/tasks/create?parent=<%= task.id %>" class="btn btn-outline-secondary">
                                    <i class="fas fa-plus me-2"></i>Ê∑ªÂä†Â≠ê‰ªªÂä°
                                </a>
                            <% } %>
                        </div>
                    </div>

                    <!-- ‰ªªÂä°ÂÖÉ‰ø°ÊÅØ -->
                    <div class="row g-3 mb-4">
                        <div class="col-auto">
                            <span class="badge bg-warning fs-6">
                                <%= '‚≠ê'.repeat(task.starLevel) %>
                            </span>
                        </div>

                        <div class="col-auto">
                            <span class="badge bg-info fs-6">
                                <% if (task.urgencyLevel === 'urgent') { %>üî• Á¥ßÊÄ•
                                <% } else if (task.urgencyLevel === 'important') { %>‚ö° ÈáçË¶Å
                                <% } else if (task.urgencyLevel === 'normal') { %>üìÖ ÊôÆÈÄö
                                <% } else if (task.urgencyLevel === 'delayed') { %>üïê Âª∂Âêé
                                <% } else if (task.urgencyLevel === 'frozen') { %>‚ùÑÔ∏è ÂÜªÁªì
                                <% } %>
                            </span>
                        </div>
                        <div class="col-auto">
                            <span class="badge bg-<%= currentStatus.class %> fs-6">
                                <i class="<%= currentStatus.icon %> me-1"></i>
                                <%= currentStatus.text %>
                            </span>
                        </div>
                    </div>

                    <!-- ‰ªªÂä°ÊèèËø∞ -->
                    <div class="mb-4">
                        <h5>‰ªªÂä°ÊèèËø∞</h5>
                        <div class="border rounded p-3 bg-light rich-text-content">
                            <%- task.description %>
                        </div>
                    </div>

                    <!-- ‰ªªÂä°ÂÖ≥Á≥ª -->
                    <% if (task.parentTask || (subtasks && subtasks.length > 0) || (siblingTasks && siblingTasks.length > 0)) { %>
                        <div class="mb-4">
                            <h5><i class="fas fa-sitemap me-2"></i>‰ªªÂä°ÂÖ≥Á≥ª</h5>

                            <!-- Áà∂‰ªªÂä°‰ø°ÊÅØ -->
                            <% if (task.parentTask) { %>
                                <div class="card mb-3">
                                    <div class="card-header bg-light">
                                        <h6 class="mb-0">
                                            <i class="fas fa-level-up-alt me-2"></i>Áà∂‰ªªÂä°
                                        </h6>
                                    </div>
                                    <div class="card-body py-2">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <a href="/tasks/<%= task.parentTask.id %>" class="text-decoration-none">
                                                    <strong><%= task.parentTask.title %></strong>
                                                </a>
                                                <% if (task.parentTask.status) { %>
                                                    <%
                                                    const parentStatus = statusConfig[task.parentTask.status] || statusConfig['draft'];
                                                    %>
                                                    <span class="badge bg-<%= parentStatus.class %> ms-2">
                                                        <%= parentStatus.text %>
                                                    </span>
                                                <% } %>
                                            </div>
                                            <a href="/tasks/<%= task.parentTask.id %>" class="btn btn-outline-primary btn-sm">
                                                <i class="fas fa-external-link-alt me-1"></i>Êü•Áúã
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            <% } %>

                            <!-- ÂêåÁ∫ß‰ªªÂä° -->
                            <% if (siblingTasks && siblingTasks.length > 0) { %>
                                <div class="card mb-3">
                                    <div class="card-header bg-light">
                                        <h6 class="mb-0">
                                            <i class="fas fa-equals me-2"></i>ÂêåÁ∫ß‰ªªÂä° (<%= siblingTasks.length %>)
                                        </h6>
                                    </div>
                                    <div class="card-body py-2">
                                        <div class="row g-2">
                                            <% siblingTasks.forEach(sibling => { %>
                                                <div class="col-12">
                                                    <div class="d-flex justify-content-between align-items-center py-1">
                                                        <div>
                                                            <a href="/tasks/<%= sibling.id %>" class="text-decoration-none">
                                                                <%= sibling.title %>
                                                            </a>
                                                            <%
                                                            const siblingStatus = statusConfig[sibling.status] || statusConfig['draft'];
                                                            %>
                                                            <span class="badge bg-<%= siblingStatus.class %> ms-2">
                                                                <%= siblingStatus.text %>
                                                            </span>
                                                        </div>
                                                        <small class="text-muted">
                                                            <%= '‚≠ê'.repeat(sibling.starLevel) %>
                                                        </small>
                                                    </div>
                                                </div>
                                            <% }) %>
                                        </div>
                                    </div>
                                </div>
                            <% } %>

                            <!-- Â≠ê‰ªªÂä°Ê¶ÇËßà -->
                            <% if (subtasks && subtasks.length > 0) { %>
                                <div class="card">
                                    <div class="card-header bg-light">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <h6 class="mb-0">
                                                <i class="fas fa-level-down-alt me-2"></i>Â≠ê‰ªªÂä° (<%= subtasks.length %>)
                                            </h6>
                                            <% if (task.level < 3) { %>
                                                <a href="/tasks/create?parent=<%= task.id %>" class="btn btn-outline-success btn-sm">
                                                    <i class="fas fa-plus me-1"></i>Ê∑ªÂä†Â≠ê‰ªªÂä°
                                                </a>
                                            <% } %>
                                        </div>
                                    </div>
                                    <div class="card-body py-2">
                                        <!-- Â≠ê‰ªªÂä°Áä∂ÊÄÅÁªüËÆ° -->
                                        <%
                                        const subtaskStats = {};
                                        subtasks.forEach(subtask => {
                                            const status = subtask.status || 'draft';
                                            subtaskStats[status] = (subtaskStats[status] || 0) + 1;
                                        });
                                        %>
                                        <div class="row g-2 mb-3">
                                            <% Object.keys(subtaskStats).forEach(status => { %>
                                                <%
                                                const statusInfo = statusConfig[status] || statusConfig['draft'];
                                                %>
                                                <div class="col-auto">
                                                    <span class="badge bg-<%= statusInfo.class %>">
                                                        <%= statusInfo.text %>: <%= subtaskStats[status] %>
                                                    </span>
                                                </div>
                                            <% }) %>
                                        </div>

                                        <!-- Â≠ê‰ªªÂä°ÂàóË°® -->
                                        <div class="list-group list-group-flush">
                                            <% subtasks.forEach(subtask => { %>
                                                <div class="list-group-item px-0 py-2">
                                                    <div class="d-flex justify-content-between align-items-center">
                                                        <div class="flex-grow-1">
                                                            <a href="/tasks/<%= subtask.id %>" class="text-decoration-none">
                                                                <strong><%= subtask.title %></strong>
                                                            </a>
                                                            <div class="mt-1">
                                                                <small class="text-muted">
                                                                    <%= '‚≠ê'.repeat(subtask.starLevel) %>
                                                                    <% if (subtask.assignee) { %>
                                                                        | Ë¥üË¥£‰∫∫: <%= subtask.assignee.firstName %> <%= subtask.assignee.lastName %>
                                                                    <% } %>
                                                                    <% if (subtask.dueDate) { %>
                                                                        | Êà™Ê≠¢: <%= new Date(subtask.dueDate).toLocaleDateString('zh-CN') %>
                                                                    <% } %>
                                                                </small>
                                                            </div>
                                                        </div>
                                                        <div class="text-end">
                                                            <%
                                                            const subtaskStatus = statusConfig[subtask.status] || statusConfig['draft'];
                                                            %>
                                                            <span class="badge bg-<%= subtaskStatus.class %>">
                                                                <%= subtaskStatus.text %>
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                            <% }) %>
                                        </div>
                                    </div>
                                </div>
                            <% } %>
                        </div>
                    <% } %>

                    <!-- ËØÑËÆ∫Âå∫Âùó -->
                    <div class="mb-4">
                        <h5 class="d-flex align-items-center justify-content-between">
                            <span>
                                <i class="fas fa-comments me-2"></i>
                                ËØÑËÆ∫ (<%= totalComments || 0 %>)
                            </span>
                            <% if (commentsPagination && commentsPagination.totalPages > 1) { %>
                                <small class="text-muted">
                                    Á¨¨ <%= commentsPagination.page %> È°µÔºåÂÖ± <%= commentsPagination.totalPages %> È°µ
                                </small>
                            <% } %>
                        </h5>

                        <!-- Êñ∞Â¢ûËØÑËÆ∫ÁºñËæëÂô® -->
                        <% if (user) { %>
                            <%- include('../partials/comment-editor', {
                                taskId: task.id,
                                editorId: 'mainCommentEditor',
                                placeholder: 'ÂÜô‰∏ãÊÇ®ÁöÑËØÑËÆ∫...',
                                submitText: 'ÂèëÂ∏ÉËØÑËÆ∫',
                                projectMembers: projectMembers || [],
                                parentCommentId: null,
                                replyToUserId: null,
                                replyToUser: null
                            }) %>
                        <% } else { %>
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle me-2"></i>
                                ËØ∑ÂÖàÁôªÂΩïÂêéÂÜçÂèëË°®ËØÑËÆ∫
                            </div>
                        <% } %>

                        <!-- ËØÑËÆ∫ÂàóË°® -->
                        <%- include('../partials/comment-list', {
                            comments: comments || [],
                            user: user
                        }) %>

                        <!-- ËØÑËÆ∫ÂàÜÈ°µ -->
                        <% if (commentsPagination && commentsPagination.totalPages > 1) { %>
                            <nav aria-label="ËØÑËÆ∫ÂàÜÈ°µ" class="mt-4">
                                <ul class="pagination justify-content-center">
                                    <% if (commentsPagination.hasPrev) { %>
                                        <li class="page-item">
                                            <a class="page-link" href="?commentsPage=<%= commentsPagination.page - 1 %>#comments">
                                                <i class="fas fa-chevron-left"></i>
                                            </a>
                                        </li>
                                    <% } %>

                                    <% for (let i = Math.max(1, commentsPagination.page - 2); i <= Math.min(commentsPagination.totalPages, commentsPagination.page + 2); i++) { %>
                                        <li class="page-item <%= i === commentsPagination.page ? 'active' : '' %>">
                                            <a class="page-link" href="?commentsPage=<%= i %>#comments"><%= i %></a>
                                        </li>
                                    <% } %>

                                    <% if (commentsPagination.hasNext) { %>
                                        <li class="page-item">
                                            <a class="page-link" href="?commentsPage=<%= commentsPagination.page + 1 %>#comments">
                                                <i class="fas fa-chevron-right"></i>
                                            </a>
                                        </li>
                                    <% } %>
                                </ul>
                            </nav>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>

        <!-- ‰æßËæπÊ†è -->
        <div class="col-lg-4">
            <!-- Â∑•Êó∂‰ø°ÊÅØ -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-clock me-2"></i>Â∑•Êó∂‰ø°ÊÅØ
                    </h5>
                </div>
                <div class="card-body">
                    <!-- Êú¨‰ªªÂä°Â∑•Êó∂ -->
                    <div class="mb-3">
                        <h6 class="text-muted mb-2">
                            <i class="fas fa-user me-1"></i>Êú¨‰ªªÂä°Â∑•Êó∂
                        </h6>
                        <div class="row text-center">
                            <div class="col-6">
                                <div class="border-end">
                                    <div class="fw-bold text-info"><%= hoursInfo.task.estimated.toFixed(1) %></div>
                                    <small class="text-muted">È¢Ñ‰º∞Â∑•Êó∂</small>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="fw-bold text-success"><%= hoursInfo.task.actual.toFixed(1) %></div>
                                <small class="text-muted">ÂÆûÈôÖÂ∑•Êó∂</small>
                            </div>
                        </div>
                    </div>

                    <!-- Â≠ê‰ªªÂä°Â∑•Êó∂Ê±áÊÄª -->
                    <% if (hoursInfo.subtasks.count > 0) { %>
                        <hr class="my-3">

                        <div class="mb-3">
                            <h6 class="text-muted mb-2">
                                <i class="fas fa-level-down-alt me-1"></i>Â≠ê‰ªªÂä°Â∑•Êó∂Ê±áÊÄª (<%= hoursInfo.subtasks.count %>‰∏™)
                            </h6>
                            <div class="row text-center">
                                <div class="col-6">
                                    <div class="border-end">
                                        <div class="fw-bold text-info"><%= hoursInfo.subtasks.estimated.toFixed(1) %></div>
                                        <small class="text-muted">È¢Ñ‰º∞Â∑•Êó∂</small>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="fw-bold text-success"><%= hoursInfo.subtasks.actual.toFixed(1) %></div>
                                    <small class="text-muted">ÂÆûÈôÖÂ∑•Êó∂</small>
                                </div>
                            </div>
                        </div>

                        <hr class="my-3">

                        <!-- ÊÄªËÆ°Â∑•Êó∂ -->
                        <div class="mb-3">
                            <h6 class="text-primary mb-2">
                                <i class="fas fa-calculator me-1"></i>ÊÄªËÆ°Â∑•Êó∂
                            </h6>
                            <div class="row text-center">
                                <div class="col-6">
                                    <div class="border-end">
                                        <div class="display-6 fw-bold text-primary"><%= hoursInfo.total.estimated.toFixed(1) %></div>
                                        <small class="text-muted">È¢Ñ‰º∞ÊÄªËÆ°</small>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="display-6 fw-bold text-success"><%= hoursInfo.total.actual.toFixed(1) %></div>
                                    <small class="text-muted">ÂÆûÈôÖÊÄªËÆ°</small>
                                </div>
                            </div>
                        </div>

                        <!-- Â∑•Êó∂ÊïàÁéá -->
                        <% if (hoursInfo.total.actual > 0) { %>
                            <div class="text-center mb-3">
                                <div class="fw-bold <%= hoursInfo.total.efficiency >= 80 ? 'text-success' : hoursInfo.total.efficiency >= 60 ? 'text-warning' : 'text-danger' %> fs-4">
                                    <%= hoursInfo.total.efficiency.toFixed(1) %>%
                                </div>
                                <small class="text-muted">Êï¥‰ΩìÂ∑•Êó∂ÊïàÁéá</small>
                            </div>
                        <% } %>
                    <% } else { %>
                        <!-- Êó†Â≠ê‰ªªÂä°Êó∂ÁöÑÂ∑•Êó∂ÊïàÁéá -->
                        <% if (hoursInfo.task.actual > 0) { %>
                            <hr class="my-3">
                            <div class="text-center mb-3">
                                <div class="fw-bold <%= hoursInfo.task.efficiency >= 80 ? 'text-success' : hoursInfo.task.efficiency >= 60 ? 'text-warning' : 'text-danger' %> fs-4">
                                    <%= hoursInfo.task.efficiency.toFixed(1) %>%
                                </div>
                                <small class="text-muted">Â∑•Êó∂ÊïàÁéá</small>
                            </div>
                        <% } %>
                    <% } %>

                    <!-- ËØ¥Êòé‰ø°ÊÅØ -->
                    <div class="alert alert-light border-0 mb-0">
                        <small class="text-muted">
                            <i class="fas fa-info-circle me-1"></i>
                            Â∑•Êó∂ÊïàÁéá = È¢Ñ‰º∞Â∑•Êó∂ √∑ ÂÆûÈôÖÂ∑•Êó∂ √ó 100%<br>
                            <% if (hoursInfo.subtasks.count > 0) { %>
                                ÊÄªËÆ°Â∑•Êó∂ = Êú¨‰ªªÂä°Â∑•Êó∂ + ÊâÄÊúâÂ≠ê‰ªªÂä°Â∑•Êó∂ÔºàÈÄíÂΩíÁªüËÆ°Ôºâ
                            <% } %>
                        </small>
                    </div>
                </div>
            </div>

            <!-- ‰ªªÂä°‰ø°ÊÅØ -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-info-circle me-2"></i>‰ªªÂä°‰ø°ÊÅØ
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-12">
                            <strong>‰ªªÂä°Á±ªÂûãÔºö</strong>
                            <span class="ms-2">
                                <span class="badge bg-<%=
                                    task.taskType === 'requirement' ? 'info' :
                                    task.taskType === 'epic' ? 'purple' :
                                    task.taskType === 'story' ? 'primary' :
                                    task.taskType === 'dev_task' ? 'primary' :
                                    task.taskType === 'design_task' ? 'success' :
                                    task.taskType === 'test_task' ? 'warning' :
                                    task.taskType === 'devops_task' ? 'dark' :
                                    task.taskType === 'bug' ? 'danger' : 'secondary'
                                %>">
                                    <%= task.taskType === 'requirement' ? 'üìã ÈúÄÊ±Ç' :
                                        task.taskType === 'epic' ? 'üè∞ Âè≤ËØó' :
                                        task.taskType === 'story' ? 'üìñ Áî®Êà∑ÊïÖ‰∫ã' :
                                        task.taskType === 'dev_task' ? '‚öîÔ∏è ÂºÄÂèë‰ªªÂä°' :
                                        task.taskType === 'design_task' ? 'üé® ËÆæËÆ°‰ªªÂä°' :
                                        task.taskType === 'test_task' ? 'üèπ ÊµãËØï‰ªªÂä°' :
                                        task.taskType === 'devops_task' ? '‚öôÔ∏è ËøêÁª¥‰ªªÂä°' :
                                        task.taskType === 'bug' ? 'üêõ Áº∫Èô∑' : 'üìù ÈÄöÁî®‰ªªÂä°' %>
                                </span>
                            </span>
                        </div>
                        <div class="col-12">
                            <strong>ÂèëÂ∏ÉËÄÖÔºö</strong>
                            <span class="ms-2"><%= task.publisher.firstName %> <%= task.publisher.lastName %></span>
                        </div>
                        <% if (task.assignee) { %>
                            <div class="col-12">
                                <strong>Ë¥üË¥£‰∫∫Ôºö</strong>
                                <span class="ms-2"><%= task.assignee.firstName %> <%= task.assignee.lastName %></span>
                            </div>
                        <% } %>
                        <% if (assistants && assistants.length > 0) { %>
                            <div class="col-12">
                                <strong>ÂçèÂä©‰∫∫ÂëòÔºö</strong>
                                <span class="ms-2">
                                    <% assistants.forEach((assistant, index) => { %>
                                        <%= assistant.firstName %> <%= assistant.lastName %><% if (index < assistants.length - 1) { %>„ÄÅ<% } %>
                                    <% }); %>
                                </span>
                            </div>
                        <% } %>
                        <% if (task.reviewer) { %>
                            <div class="col-12">
                                <strong>ÂÆ°Ê†∏‰∫∫ÂëòÔºö</strong>
                                <span class="ms-2"><%= task.reviewer.firstName %> <%= task.reviewer.lastName %></span>
                            </div>
                        <% } %>
                        <% if (task.estimatedHours) { %>
                            <div class="col-12">
                                <strong>È¢Ñ‰º∞Â∑•Êó∂Ôºö</strong>
                                <span class="ms-2"><%= task.estimatedHours %> Â∞èÊó∂</span>
                            </div>
                        <% } %>
                        <% if (task.dueDate) { %>
                            <div class="col-12">
                                <strong>Êà™Ê≠¢Êó•ÊúüÔºö</strong>
                                <span class="ms-2"><%= new Date(task.dueDate).toLocaleDateString('zh-CN') %></span>
                            </div>
                        <% } %>
                        <div class="col-12">
                            <strong>‰ªªÂä°Áä∂ÊÄÅÔºö</strong>
                            <span class="ms-2">
                                <span class="badge bg-<%= currentStatus.class %>">
                                    <i class="<%= currentStatus.icon %> me-1"></i>
                                    <%= currentStatus.text %>
                                </span>
                            </span>
                        </div>
                        <% if (task.startDate) { %>
                            <div class="col-12">
                                <strong>ÂºÄÂßãÊó∂Èó¥Ôºö</strong>
                                <span class="ms-2"><%= new Date(task.startDate).toLocaleDateString('zh-CN') %></span>
                            </div>
                        <% } %>
                        <% if (task.completedAt) { %>
                            <div class="col-12">
                                <strong>ÂÆåÊàêÊó∂Èó¥Ôºö</strong>
                                <span class="ms-2"><%= new Date(task.completedAt).toLocaleDateString('zh-CN') %></span>
                            </div>
                        <% } %>
                        <div class="col-12">
                            <strong>ÂàõÂª∫Êó∂Èó¥Ôºö</strong>
                            <span class="ms-2"><%= new Date(task.createdAt).toLocaleDateString('zh-CN') %></span>
                        </div>
                        <% if (task.level > 0) { %>
                            <div class="col-12">
                                <strong>‰ªªÂä°Â±ÇÁ∫ßÔºö</strong>
                                <span class="ms-2">Á¨¨ <%= task.level + 1 %> Á∫ß</span>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- È°πÁõÆ‰ø°ÊÅØ -->
            <% if (task.project) { %>
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-project-diagram me-2"></i>ÊâÄÂ±ûÈ°πÁõÆ
                        </h5>
                    </div>
                    <div class="card-body">
                        <h6><%= task.project.name %></h6>
                        <p class="text-muted mb-2"><%= task.project.description || 'ÊöÇÊó†ÊèèËø∞' %></p>
                        <a href="/projects/<%= task.project.id %>" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-external-link-alt me-1"></i>Êü•ÁúãÈ°πÁõÆ
                        </a>
                    </div>
                </div>
            <% } %>
    </div>
</div>

<!-- ÂÆåÊàê‰ªªÂä°Ê®°ÊÄÅÊ°Ü -->
<div class="modal fade" id="completeModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ÂÆåÊàê‰ªªÂä°</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form action="/tasks/<%= task.id %>/complete" method="POST">
                <div class="modal-body">
                    <p>ËØ∑Á°ÆËÆ§‰ªªÂä°Â∑≤ÂÆåÊàêÔºåÂπ∂Â°´ÂÜôÂÆûÈôÖÂ∑•Êó∂Ôºö</p>

                    <div class="mb-3">
                        <label for="actualHours" class="form-label">ÂÆûÈôÖÂ∑•Êó∂ÔºàÂ∞èÊó∂Ôºâ</label>
                        <input type="number" class="form-control" id="actualHours" name="actualHours"
                               min="0.5" step="0.5" placeholder="ËØ∑ËæìÂÖ•ÂÆûÈôÖÂ∑•Êó∂">
                        <div class="form-text">
                            <% if (task.estimatedHours) { %>
                                È¢Ñ‰º∞Â∑•Êó∂Ôºö<%= task.estimatedHours %> Â∞èÊó∂
                            <% } else { %>
                                Â°´ÂÜôÂÆûÈôÖÂ∑•Êó∂ÊúâÂä©‰∫éÈ°πÁõÆÁÆ°ÁêÜÂíåÂ•ñÂä±ËÆ°ÁÆó
                            <% } %>
                        </div>
                    </div>

                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        <% if (task.reviewerId) { %>
                            ÂÆåÊàêÂêé‰ªªÂä°Â∞ÜÊèê‰∫§ÁªôÂÆ°Ê†∏‰∫∫ÂëòËøõË°åÂÆ°Ê†∏„ÄÇ
                        <% } else { %>
                            ÂÆåÊàêÂêé‰ªªÂä°Â∞ÜÁõ¥Êé•Ê†áËÆ∞‰∏∫Â∑≤ÂÆåÊàê„ÄÇ
                        <% } %>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ÂèñÊ∂à</button>
                    <button type="submit" class="btn btn-success">Á°ÆËÆ§ÂÆåÊàê</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
// ÂÖ®Â±ÄÂèòÈáè
window.taskId = '<%= task.id %>';
window.projectMembersData = <%- JSON.stringify(projectMembers || []) %>;
window.currentUserId = '<%- typeof user !== 'undefined' && user ? user.id : 'null' %>';
window.currentUserRole = '<%- typeof user !== 'undefined' && user ? user.role : '' %>';

// ËßíËâ≤ÊñáÊú¨Êò†Â∞ÑÂáΩÊï∞
function getRoleText(role) {
    const roleMap = {
        'product_manager': '‰∫ßÂìÅÁªèÁêÜ',
        'developer': 'ÂºÄÂèëËÄÖ',
        'tester': 'ÊµãËØïÂ∑•Á®ãÂ∏à',
        'ui_designer': 'UIËÆæËÆ°Â∏à',
        'devops': 'ËøêÁª¥Â∑•Á®ãÂ∏à',
        'client': 'ÂÆ¢Êà∑',
        'admin': 'ÁÆ°ÁêÜÂëò'
    };
    return roleMap[role] || role;
}

$(document).ready(function() {
    // È°µÈù¢ÂàùÂßãÂåñ
    initCommentSystem();
});

// ÂàùÂßãÂåñËØÑËÆ∫Á≥ªÁªü
function initCommentSystem() {
    // ÂàùÂßãÂåñÊâÄÊúâËØÑËÆ∫ÁºñËæëÂô®
    $('.comment-editor').each(function() {
        initCommentEditor($(this));
    });

    // ÁªëÂÆöÂõûÂ§çÊåâÈíÆ‰∫ã‰ª∂
    $(document).on('click', '.reply-btn', function() {
        const commentId = $(this).data('comment-id');
        const userId = $(this).data('user-id');
        const username = $(this).data('username');
        showReplyEditor(commentId, userId, username);
    });

    // ÁªëÂÆöÁºñËæëËØÑËÆ∫ÊåâÈíÆ‰∫ã‰ª∂
    $(document).on('click', '.edit-comment-btn', function() {
        const commentId = $(this).data('comment-id');
        editComment(commentId);
    });

    // ÁªëÂÆöÂà†Èô§ËØÑËÆ∫ÊåâÈíÆ‰∫ã‰ª∂
    $(document).on('click', '.delete-comment-btn', function() {
        const commentId = $(this).data('comment-id');
        deleteComment(commentId);
    });

    // ÁªëÂÆöÂä†ËΩΩÊõ¥Â§öÂõûÂ§çÊåâÈíÆ‰∫ã‰ª∂
    $(document).on('click', '.load-more-replies-btn', function() {
        const commentId = $(this).data('comment-id');
        loadMoreReplies(commentId);
    });
}

// ÂàùÂßãÂåñËØÑËÆ∫ÁºñËæëÂô®
function initCommentEditor($editor) {
    const $form = $editor.find('.comment-form');
    const $richEditor = $editor.find('.rich-editor-content');
    const $textarea = $editor.find('.comment-content');
    const $toolbar = $editor.find('.rich-editor-toolbar');
    const $imageUpload = $editor.find('.image-upload');
    const $mentionDropdown = $editor.find('.mention-dropdown');

    // ÂêåÊ≠•ÂÜÖÂÆπÂà∞ÈöêËóèÁöÑtextarea
    function syncContent() {
        $textarea.val($richEditor.html());
    }

    // ÁõëÂê¨ÂÜÖÂÆπÂèòÂåñ
    $richEditor.on('input paste', function() {
        setTimeout(syncContent, 10);
    });

    // Â∑•ÂÖ∑Ê†èÊåâÈíÆ‰∫ã‰ª∂
    $toolbar.on('click', '.rich-editor-btn', function(e) {
        e.preventDefault();
        const command = $(this).data('command');

        if (command) {
            if (command === 'createLink') {
                const url = prompt('ËØ∑ËæìÂÖ•ÈìæÊé•Âú∞ÂùÄ:');
                if (url) {
                    document.execCommand(command, false, url);
                }
            } else {
                document.execCommand(command, false, null);
            }
            updateToolbarState($toolbar);
            syncContent();
        }
    });

    // ÊèíÂÖ•ÂõæÁâáÊåâÈíÆ
    $toolbar.on('click', '.insert-image-btn', function(e) {
        e.preventDefault();
        $imageUpload.click();
    });

    // @ÊèêÈÜíÊåâÈíÆ
    $toolbar.on('click', '.mention-btn', function(e) {
        e.preventDefault();
        insertMention($richEditor, $mentionDropdown);
    });

    // ÂõæÁâá‰∏ä‰º†Â§ÑÁêÜ
    $imageUpload.on('change', function(e) {
        const file = e.target.files[0];
        if (file) {
            console.log('ÂõæÁâáÊñá‰ª∂ÈÄâÊã©:', file.name, file.size);
            uploadImage(file, $richEditor);
            $(this).val(''); // Ê∏ÖÁ©∫Êñá‰ª∂ËæìÂÖ•
        }
    });

    // @Áî®Êà∑ÈÄâÊã©
    $mentionDropdown.on('click', '.mention-item', function() {
        const username = $(this).data('username');
        const userId = $(this).data('user-id');
        insertUserMention($richEditor, username, userId);
        $mentionDropdown.hide();
    });

    // Ë°®ÂçïÊèê‰∫§
    $form.on('submit', function(e) {
        e.preventDefault();
        submitComment($form);
    });

    // ÂèñÊ∂àÊåâÈíÆ
    $editor.on('click', '.cancel-comment, .cancel-reply', function() {
        if ($editor.attr('id') === 'mainCommentEditor') {
            // ‰∏ªÁºñËæëÂô®Âè™Ê∏ÖÁ©∫ÂÜÖÂÆπ
            $richEditor.html('');
            syncContent();
        } else {
            // ÂõûÂ§çÁºñËæëÂô®Áõ¥Êé•ÈöêËóè
            $editor.hide();
        }
    });

    // Êõ¥Êñ∞Â∑•ÂÖ∑Ê†èÁä∂ÊÄÅ
    $richEditor.on('mouseup keyup', function() {
        updateToolbarState($toolbar);
    });

    // ÂàùÂßãÂêåÊ≠•
    syncContent();
}

// Êõ¥Êñ∞Â∑•ÂÖ∑Ê†èÊåâÈíÆÁä∂ÊÄÅ
function updateToolbarState($toolbar) {
    $toolbar.find('.rich-editor-btn[data-command]').each(function() {
        const command = $(this).data('command');
        if (document.queryCommandState(command)) {
            $(this).addClass('active');
        } else {
            $(this).removeClass('active');
        }
    });
}

// ÊòæÁ§∫ÂõûÂ§çÁºñËæëÂô®
function showReplyEditor(parentCommentId, replyToUserId, replyToUsername) {
    // ÈöêËóèÂÖ∂‰ªñÂõûÂ§çÁºñËæëÂô®
    $('.reply-editor-container').hide().empty();

    // Ëé∑ÂèñÈ°πÁõÆÊàêÂëòÊï∞ÊçÆÔºà‰ªéÈ°µÈù¢‰∏≠Ëé∑ÂèñÔºâ
    const projectMembers = window.projectMembersData || [];

    // ÁîüÊàêÈ°πÁõÆÊàêÂëòÈÄâÈ°πHTML
    let memberOptionsHtml = '';
    projectMembers.forEach(member => {
        const roleText = getRoleText(member.role);
        memberOptionsHtml += `
            <button type="button" class="dropdown-item mention-item"
                    data-user-id="${member.id}"
                    data-username="${member.firstName}${member.lastName}">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <div class="fw-medium">${member.firstName} ${member.lastName}</div>
                        <small class="text-muted">${roleText}</small>
                    </div>
                </div>
            </button>
        `;
    });

    // ÂàõÂª∫ÂõûÂ§çÁºñËæëÂô®HTML
    const editorHtml = `
        <div class="comment-editor mt-3" id="replyEditor_${parentCommentId}">
            <div class="card">
                <div class="card-body">
                    <form class="comment-form" data-task-id="${window.taskId}" data-parent-id="${parentCommentId}" data-reply-to="${replyToUserId}">
                        <div class="reply-indicator mb-2">
                            <small class="text-muted">
                                <i class="fas fa-reply me-1"></i>
                                ÂõûÂ§ç <strong>${replyToUsername}</strong>
                                <button type="button" class="btn btn-link btn-sm p-0 ms-2 cancel-reply">
                                    <i class="fas fa-times"></i>
                                </button>
                            </small>
                        </div>
                        <div class="rich-editor mb-3">
                            <div class="rich-editor-toolbar">
                                <button type="button" class="rich-editor-btn" data-command="bold" title="Á≤ó‰Ωì">
                                    <i class="fas fa-bold"></i>
                                </button>
                                <button type="button" class="rich-editor-btn" data-command="italic" title="Êñú‰Ωì">
                                    <i class="fas fa-italic"></i>
                                </button>
                                <button type="button" class="rich-editor-btn" data-command="underline" title="‰∏ãÂàíÁ∫ø">
                                    <i class="fas fa-underline"></i>
                                </button>
                                <span class="rich-editor-separator"></span>
                                <button type="button" class="rich-editor-btn insert-image-btn" title="ÊèíÂÖ•ÂõæÁâá">
                                    <i class="fas fa-image"></i>
                                </button>
                                <button type="button" class="rich-editor-btn mention-btn" title="@ÊèêÈÜí">
                                    <i class="fas fa-at"></i>
                                </button>
                                <button type="button" class="rich-editor-btn" data-command="removeFormat" title="Ê∏ÖÈô§Ê†ºÂºè">
                                    <i class="fas fa-remove-format"></i>
                                </button>
                            </div>
                            <div class="rich-editor-content" contenteditable="true" placeholder="ÂÜô‰∏ãÊÇ®ÁöÑÂõûÂ§ç...">
                                @${replyToUsername}
                            </div>
                        </div>
                        <textarea class="form-control d-none comment-content" name="content" required></textarea>
                        <input type="file" class="image-upload" accept="image/*" style="display: none;">
                        <div class="mention-dropdown" style="display: none;">
                            <div class="dropdown-menu show">
                                ${memberOptionsHtml}
                            </div>
                        </div>
                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-outline-secondary btn-sm cancel-reply me-2">
                                <i class="fas fa-times me-1"></i>ÂèñÊ∂à
                            </button>
                            <button type="submit" class="btn btn-primary btn-sm submit-comment">
                                <i class="fas fa-paper-plane me-1"></i>ÂèëÂ∏ÉÂõûÂ§ç
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    `;

    // ÊèíÂÖ•Âà∞ÂØπÂ∫îËØÑËÆ∫ÁöÑÂõûÂ§çÂÆπÂô®‰∏≠
    const $container = $(`.comment-item[data-comment-id="${parentCommentId}"] .reply-editor-container`);
    $container.html(editorHtml).show();

    // ÂàùÂßãÂåñÊñ∞ÂàõÂª∫ÁöÑÁºñËæëÂô®
    initCommentEditor($container.find('.comment-editor'));

    // ËÅöÁÑ¶Âà∞ÁºñËæëÂô®
    $container.find('.rich-editor-content').focus();
}

// Êèê‰∫§ËØÑËÆ∫
function submitComment($form) {
    const taskId = $form.data('task-id');
    const parentCommentId = $form.data('parent-id') || null;
    const replyToUserId = $form.data('reply-to') || null;
    const content = $form.find('.comment-content').val().trim();

    if (!content) {
        KanbanApp.showAlert('ËØ∑ËæìÂÖ•ËØÑËÆ∫ÂÜÖÂÆπ', 'warning');
        return;
    }

    const $submitBtn = $form.find('.submit-comment');
    const originalText = $submitBtn.html();

    // Á¶ÅÁî®Êèê‰∫§ÊåâÈíÆ
    $submitBtn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>ÂèëÂ∏É‰∏≠...');

    $.ajax({
        url: `/tasks/${taskId}/comments`,
        method: 'POST',
        data: {
            content: content,
            parentCommentId: parentCommentId,
            replyToUserId: replyToUserId
        },
        success: function(response) {
            if (response.success) {
                KanbanApp.showAlert('ËØÑËÆ∫ÂèëÂ∏ÉÊàêÂäü', 'success');
                // Âà∑Êñ∞È°µÈù¢‰ª•ÊòæÁ§∫Êñ∞ËØÑËÆ∫
                setTimeout(() => {
                    window.location.reload();
                }, 1000);
            } else {
                KanbanApp.showAlert(response.message || 'ËØÑËÆ∫ÂèëÂ∏ÉÂ§±Ë¥•', 'danger');
            }
        },
        error: function(xhr) {
            const response = xhr.responseJSON;
            KanbanApp.showAlert(response?.message || 'ËØÑËÆ∫ÂèëÂ∏ÉÂ§±Ë¥•', 'danger');
        },
        complete: function() {
            // ÊÅ¢Â§çÊèê‰∫§ÊåâÈíÆ
            $submitBtn.prop('disabled', false).html(originalText);
        }
    });
}

// ÁºñËæëËØÑËÆ∫
function editComment(commentId) {
    // Ëé∑ÂèñËØÑËÆ∫ÂÜÖÂÆπ
    const $commentItem = $(`.comment-item[data-comment-id="${commentId}"], .comment-reply[data-comment-id="${commentId}"]`);
    const $contentDiv = $commentItem.find('.comment-content').first();
    const originalContent = $contentDiv.html();

    // ÂàõÂª∫ÁºñËæëË°®Âçï
    const editFormHtml = `
        <div class="edit-comment-form">
            <div class="rich-editor mb-3">
                <div class="rich-editor-toolbar">
                    <button type="button" class="rich-editor-btn" data-command="bold" title="Á≤ó‰Ωì">
                        <i class="fas fa-bold"></i>
                    </button>
                    <button type="button" class="rich-editor-btn" data-command="italic" title="Êñú‰Ωì">
                        <i class="fas fa-italic"></i>
                    </button>
                    <button type="button" class="rich-editor-btn" data-command="underline" title="‰∏ãÂàíÁ∫ø">
                        <i class="fas fa-underline"></i>
                    </button>
                    <span class="rich-editor-separator"></span>
                    <button type="button" class="rich-editor-btn insert-image-btn" title="ÊèíÂÖ•ÂõæÁâá">
                        <i class="fas fa-image"></i>
                    </button>
                    <button type="button" class="rich-editor-btn" data-command="removeFormat" title="Ê∏ÖÈô§Ê†ºÂºè">
                        <i class="fas fa-remove-format"></i>
                    </button>
                </div>
                <div class="rich-editor-content" contenteditable="true">${originalContent}</div>
            </div>
            <textarea class="form-control d-none edit-content" required></textarea>
            <input type="file" class="image-upload" accept="image/*" style="display: none;">
            <div class="d-flex justify-content-end">
                <button type="button" class="btn btn-outline-secondary btn-sm cancel-edit me-2">
                    <i class="fas fa-times me-1"></i>ÂèñÊ∂à
                </button>
                <button type="button" class="btn btn-primary btn-sm save-edit" data-comment-id="${commentId}">
                    <i class="fas fa-save me-1"></i>‰øùÂ≠ò
                </button>
            </div>
        </div>
    `;

    // ÊõøÊç¢ÂÜÖÂÆπÂå∫Âüü
    $contentDiv.hide().after(editFormHtml);

    // ÂàùÂßãÂåñÁºñËæëÂô®
    const $editForm = $commentItem.find('.edit-comment-form');
    const $richEditor = $editForm.find('.rich-editor-content');
    const $textarea = $editForm.find('.edit-content');
    const $toolbar = $editForm.find('.rich-editor-toolbar');
    const $imageUpload = $editForm.find('.image-upload');

    // ÂêåÊ≠•ÂÜÖÂÆπ
    function syncEditContent() {
        $textarea.val($richEditor.html());
    }

    $richEditor.on('input', syncEditContent);
    syncEditContent();

    // Â∑•ÂÖ∑Ê†èÊåâÈíÆ‰∫ã‰ª∂
    $toolbar.on('click', '.rich-editor-btn', function(e) {
        e.preventDefault();
        const command = $(this).data('command');

        if (command) {
            document.execCommand(command, false, null);
            syncEditContent();
        }
    });

    // ÊèíÂÖ•ÂõæÁâáÊåâÈíÆ
    $toolbar.on('click', '.insert-image-btn', function(e) {
        e.preventDefault();
        $imageUpload.click();
    });

    // ÂõæÁâá‰∏ä‰º†Â§ÑÁêÜ
    $imageUpload.on('change', function(e) {
        const file = e.target.files[0];
        if (file) {
            uploadImage(file, $richEditor);
            $(this).val(''); // Ê∏ÖÁ©∫Êñá‰ª∂ËæìÂÖ•
        }
    });

    // ÂèñÊ∂àÁºñËæë
    $editForm.on('click', '.cancel-edit', function() {
        $editForm.remove();
        $contentDiv.show();
    });

    // ‰øùÂ≠òÁºñËæë
    $editForm.on('click', '.save-edit', function() {
        const content = $textarea.val().trim();
        if (!content) {
            KanbanApp.showAlert('ËØ∑ËæìÂÖ•ËØÑËÆ∫ÂÜÖÂÆπ', 'warning');
            return;
        }

        const $saveBtn = $(this);
        const originalText = $saveBtn.html();
        $saveBtn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>‰øùÂ≠ò‰∏≠...');

        $.ajax({
            url: `/tasks/${window.taskId}/comments/${commentId}`,
            method: 'PUT',
            data: { content: content },
            success: function(response) {
                if (response.success) {
                    KanbanApp.showAlert('ËØÑËÆ∫Êõ¥Êñ∞ÊàêÂäü', 'success');
                    // Êõ¥Êñ∞ÊòæÁ§∫ÂÜÖÂÆπ
                    $contentDiv.html(content);
                    $editForm.remove();
                    $contentDiv.show();

                    // Ê∑ªÂä†ÁºñËæëÊ†áËÆ∞
                    const $header = $commentItem.find('.comment-header .comment-time').first();
                    if (!$header.find('.fa-edit').length) {
                        $header.find('small').append(' <span class="ms-1" title="Â∑≤ÁºñËæë"><i class="fas fa-edit"></i></span>');
                    }
                } else {
                    KanbanApp.showAlert(response.message || 'ËØÑËÆ∫Êõ¥Êñ∞Â§±Ë¥•', 'danger');
                }
            },
            error: function(xhr) {
                const response = xhr.responseJSON;
                KanbanApp.showAlert(response?.message || 'ËØÑËÆ∫Êõ¥Êñ∞Â§±Ë¥•', 'danger');
            },
            complete: function() {
                $saveBtn.prop('disabled', false).html(originalText);
            }
        });
    });

    // ËÅöÁÑ¶Âà∞ÁºñËæëÂô®
    $richEditor.focus();
}

// Âà†Èô§ËØÑËÆ∫
function deleteComment(commentId) {
    if (!confirm('Á°ÆÂÆöË¶ÅÂà†Èô§ËøôÊù°ËØÑËÆ∫ÂêóÔºüÊ≠§Êìç‰Ωú‰∏çÂèØÊí§ÈîÄ„ÄÇ')) {
        return;
    }

    $.ajax({
        url: `/tasks/${window.taskId}/comments/${commentId}`,
        method: 'DELETE',
        success: function(response) {
            if (response.success) {
                KanbanApp.showAlert('ËØÑËÆ∫Âà†Èô§ÊàêÂäü', 'success');
                // ÁßªÈô§ËØÑËÆ∫ÂÖÉÁ¥†
                $(`.comment-item[data-comment-id="${commentId}"], .comment-reply[data-comment-id="${commentId}"]`).fadeOut(300, function() {
                    $(this).remove();
                    // Êõ¥Êñ∞ËØÑËÆ∫ËÆ°Êï∞
                    updateCommentCount();
                });
            } else {
                KanbanApp.showAlert(response.message || 'ËØÑËÆ∫Âà†Èô§Â§±Ë¥•', 'danger');
            }
        },
        error: function(xhr) {
            const response = xhr.responseJSON;
            KanbanApp.showAlert(response?.message || 'ËØÑËÆ∫Âà†Èô§Â§±Ë¥•', 'danger');
        }
    });
}

// Âä†ËΩΩÊõ¥Â§öÂõûÂ§ç
function loadMoreReplies(commentId) {
    const $btn = $(`.load-more-replies-btn[data-comment-id="${commentId}"]`);
    const originalText = $btn.html();
    const $repliesContainer = $(`.comment-replies[data-comment-id="${commentId}"]`);

    $btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>Âä†ËΩΩ‰∏≠...');

    // ËÆ°ÁÆóÂΩìÂâçÂ∑≤ÊòæÁ§∫ÁöÑÂõûÂ§çÊï∞ÈáèÔºàÊéíÈô§"Âä†ËΩΩÊõ¥Â§ö"ÊåâÈíÆÔºâ
    const currentRepliesCount = $repliesContainer.find('.comment-reply').length;
    const limit = 10; // ÊØèÊ¨°Âä†ËΩΩ10Êù°

    // ‰ΩøÁî®offsetÂèÇÊï∞Á≤æÁ°ÆÊéßÂà∂Êï∞ÊçÆËé∑Âèñ
    $.ajax({
        url: `/tasks/${window.taskId}/comments/${commentId}/replies`,
        method: 'GET',
        data: {
            offset: currentRepliesCount, // ‰ªéÂΩìÂâçÂ∑≤ÊòæÁ§∫Êï∞ÈáèÂºÄÂßã
            limit: limit
        },
        success: function(response) {
            if (response.success && response.data.length > 0) {
                // Ê∏≤ÊüìÊñ∞ÁöÑÂõûÂ§ç
                response.data.forEach(function(reply) {
                    const replyHtml = renderReplyHtml(reply);
                    $btn.parent().before(replyHtml);
                });

                // Ê£ÄÊü•ÊòØÂê¶ËøòÊúâÊõ¥Â§öÂõûÂ§ç
                const newTotalDisplayed = currentRepliesCount + response.data.length;
                if (newTotalDisplayed >= response.pagination.total) {
                    $btn.hide(); // ÊâÄÊúâÂõûÂ§çÈÉΩÂ∑≤ÊòæÁ§∫
                } else {
                    $btn.prop('disabled', false).html(originalText);
                }
            } else {
                $btn.hide(); // Ê≤°ÊúâÊõ¥Â§öÂõûÂ§ç
            }
        },
        error: function() {
            KanbanApp.showAlert('Âä†ËΩΩÂõûÂ§çÂ§±Ë¥•', 'danger');
            $btn.prop('disabled', false).html(originalText);
        }
    });
}

// Ê∏≤ÊüìÂõûÂ§çHTML - ‰∏éÂéüÂßãÊ®°Êùø‰øùÊåÅ‰∏ÄËá¥
function renderReplyHtml(reply) {
    const userDisplayName = reply.user.firstName + ' ' + reply.user.lastName;

    // ÂàõÂª∫‰∏ªÂÆπÂô®
    const $replyDiv = $('<div class="comment-reply"></div>').attr('data-comment-id', reply.id);

    // ÂàõÂª∫ËøûÊé•Á∫ø
    const $connector = $('<div class="reply-connector"></div>');
    $replyDiv.append($connector);

    // ÂàõÂª∫ÂõûÂ§çÂÜÖÂÆπÂÆπÂô®
    const $content = $('<div class="reply-content"></div>');

    // ÂàõÂª∫Â§¥ÈÉ®
    const $header = $('<div class="comment-header"></div>');

    // ÂàõÂª∫‰ΩúËÄÖ‰ø°ÊÅØ
    const $author = $('<div class="comment-author"></div>');

    // Ê∑ªÂä†Áî®Êà∑ÂõæÊ†á
    const $userIcon = $('<i class="fas fa-user-circle me-2 text-secondary"></i>');
    $author.append($userIcon);

    // Ê∑ªÂä†Áî®Êà∑Âêç
    const $authorName = $('<strong></strong>').text(userDisplayName);
    $author.append($authorName);

    // Ê∑ªÂä†ÂõûÂ§çÁõÆÊ†á‰ø°ÊÅØÔºàÂ¶ÇÊûúÊúâÔºâ
    if (reply.replyToUser) {
        const $replyTo = $('<span class="reply-to ms-1"></span>');
        const $replyToStrong = $('<strong></strong>').text(reply.replyToUser.firstName + ' ' + reply.replyToUser.lastName);
        $replyTo.text('ÂõûÂ§ç ').append($replyToStrong);
        $author.append($replyTo);
    }

    // Ê∑ªÂä†ËßíËâ≤ÂæΩÁ´†
    const $roleSpan = $('<span class="comment-role ms-2"></span>');
    const roleBadge = getRoleBadgeHtml(reply.user.role);
    if (roleBadge) {
        $roleSpan.html(roleBadge);
        $author.append($roleSpan);
    }

    // ÂàõÂª∫Êó∂Èó¥‰ø°ÊÅØ
    const $time = $('<div class="comment-time"></div>');
    const $timeSmall = $('<small class="text-muted"></small>');
    $timeSmall.text(formatDateTime(reply.createdAt));

    // Ê∑ªÂä†ÁºñËæëÊ†áËÆ∞ÔºàÂ¶ÇÊûúÊúâÔºâ
    if (reply.isEdited) {
        const $editedSpan = $('<span class="ms-1"></span>').attr('title', 'Â∑≤ÁºñËæë');
        const $editIcon = $('<i class="fas fa-edit"></i>');
        $editedSpan.append($editIcon);
        $timeSmall.append($editedSpan);
    }

    $time.append($timeSmall);

    $header.append($author, $time);
    $content.append($header);

    // ÂàõÂª∫ËØÑËÆ∫ÂÜÖÂÆπ
    const $commentContent = $('<div class="comment-content rich-text-content"></div>').html(reply.content);
    $content.append($commentContent);

    // ÂàõÂª∫Êìç‰ΩúÂå∫Âüü
    const $actions = $('<div class="comment-actions"></div>');

    // ÁªüËÆ°‰ø°ÊÅØ
    const $stats = $('<div class="comment-stats"></div>');
    if (reply.likesCount > 0) {
        const $likes = $('<span class="likes-count"></span>')
            .html(`<i class="fas fa-thumbs-up text-primary me-1"></i>${reply.likesCount}`);
        $stats.append($likes);
    }

    // ÊåâÈíÆÁªÑ
    const $buttons = $('<div class="comment-buttons"></div>');

    // ÂõûÂ§çÊåâÈíÆ
    const $replyBtn = $('<button type="button" class="btn btn-link btn-sm reply-btn"></button>')
        .attr('data-comment-id', reply.parentCommentId)
        .attr('data-user-id', reply.user.id)
        .attr('data-username', reply.user.firstName + reply.user.lastName)
        .html('<i class="fas fa-reply me-1"></i>ÂõûÂ§ç');
    $buttons.append($replyBtn);

    // ÁºñËæëÊåâÈíÆÔºà‰ªÖ‰ΩúËÄÖÂèØËßÅÔºâ
    if (reply.userId === window.currentUserId) {
        const $editBtn = $('<button type="button" class="btn btn-link btn-sm edit-comment-btn"></button>')
            .attr('data-comment-id', reply.id)
            .html('<i class="fas fa-edit me-1"></i>ÁºñËæë');
        $buttons.append($editBtn);
    }

    // Âà†Èô§ÊåâÈíÆÔºà‰ΩúËÄÖÂíåÁÆ°ÁêÜÂëòÂèØËßÅÔºâ
    if (reply.userId === window.currentUserId || window.currentUserRole === 'admin') {
        const $deleteBtn = $('<button type="button" class="btn btn-link btn-sm text-danger delete-comment-btn"></button>')
            .attr('data-comment-id', reply.id)
            .html('<i class="fas fa-trash me-1"></i>Âà†Èô§');
        $buttons.append($deleteBtn);
    }

    $actions.append($stats, $buttons);
    $content.append($actions);
    $replyDiv.append($content);

    return $replyDiv[0].outerHTML;
}

// Ëé∑ÂèñËßíËâ≤‰ø°ÊÅØ
function getRoleInfo(role) {
    const roleMap = {
        'admin': { name: 'ÁÆ°ÁêÜÂëò', class: 'bg-danger' },
        'client': { name: 'ÂÆ¢Êà∑', class: 'bg-purple' },
        'product_manager': { name: '‰∫ßÂìÅÁªèÁêÜ', class: 'bg-primary' },
        'developer': { name: 'ÂºÄÂèë', class: 'bg-success' },
        'tester': { name: 'ÊµãËØï', class: 'bg-warning' },
        'designer': { name: 'ËÆæËÆ°Â∏à', class: 'bg-info' },
        'ops': { name: 'ËøêÁª¥', class: 'bg-dark' }
    };
    return roleMap[role] || { name: 'ÊàêÂëò', class: 'bg-secondary' };
}

// Ëé∑ÂèñËßíËâ≤ÂæΩÁ´†HTML - ‰∏éÂéüÂßãÊ®°Êùø‰øùÊåÅ‰∏ÄËá¥
function getRoleBadgeHtml(role) {
    switch (role) {
        case 'product_manager':
            return '<span class="badge bg-info">‰∫ßÂìÅÁªèÁêÜ</span>';
        case 'developer':
            return '<span class="badge bg-primary">ÂºÄÂèëËÄÖ</span>';
        case 'tester':
            return '<span class="badge bg-warning">ÊµãËØïÂ∑•Á®ãÂ∏à</span>';
        case 'ui_designer':
            return '<span class="badge bg-success">UIËÆæËÆ°Â∏à</span>';
        case 'devops':
            return '<span class="badge bg-dark">ËøêÁª¥Â∑•Á®ãÂ∏à</span>';
        case 'client':
            return '<span class="badge bg-purple">ÂÆ¢Êà∑</span>';
        case 'admin':
            return '<span class="badge bg-danger">ÁÆ°ÁêÜÂëò</span>';
        default:
            return null; // ‰∏çÊòæÁ§∫ÂæΩÁ´†
    }
}

// Ê†ºÂºèÂåñÊó•ÊúüÊó∂Èó¥
function formatDateTime(dateString) {
    const date = new Date(dateString);
    const now = new Date();
    const diff = now - date;

    // Â∞è‰∫é1ÂàÜÈíü
    if (diff < 60000) {
        return 'ÂàöÂàö';
    }

    // Â∞è‰∫é1Â∞èÊó∂
    if (diff < 3600000) {
        const minutes = Math.floor(diff / 60000);
        return `${minutes}ÂàÜÈíüÂâç`;
    }

    // Â∞è‰∫é24Â∞èÊó∂
    if (diff < 86400000) {
        const hours = Math.floor(diff / 3600000);
        return `${hours}Â∞èÊó∂Ââç`;
    }

    // Â∞è‰∫é7Â§©
    if (diff < 604800000) {
        const days = Math.floor(diff / 86400000);
        return `${days}Â§©Ââç`;
    }

    // Ë∂ÖËøá7Â§©ÊòæÁ§∫ÂÖ∑‰ΩìÊó•Êúü
    return date.toLocaleDateString('zh-CN', {
        year: 'numeric',
        month: 'short',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
    });
}

// Êõ¥Êñ∞ËØÑËÆ∫ËÆ°Êï∞
function updateCommentCount() {
    const totalComments = $('.comment-item, .comment-reply').length;
    $('.comments-section h5 span').html(`<i class="fas fa-comments me-2"></i>ËØÑËÆ∫ (${totalComments})`);
}

// ‰∏ä‰º†ÂõæÁâá
function uploadImage(file, $richEditor) {
    console.log('ÂºÄÂßã‰∏ä‰º†ÂõæÁâá:', file.name, 'ÁºñËæëÂô®:', $richEditor.length);
    const formData = new FormData();
    formData.append('taskImage', file);

    $.ajax({
        url: '/tasks/upload-image',
        method: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        success: function(response) {
            console.log('ÂõæÁâá‰∏ä‰º†ÂìçÂ∫î:', response);
            if (response.success) {
                // ÊèíÂÖ•ÂõæÁâáÂà∞ÁºñËæëÂô®
                const img = document.createElement('img');
                img.src = response.location;
                img.style.maxWidth = '100%';
                img.style.height = 'auto';

                // Ëé∑ÂèñÂΩìÂâçÈÄâÊã©ÊàñÂÖâÊ†á‰ΩçÁΩÆ
                const selection = window.getSelection();
                if (selection.rangeCount > 0) {
                    const range = selection.getRangeAt(0);
                    range.insertNode(img);
                    range.collapse(false);
                } else {
                    $richEditor[0].appendChild(img);
                }

                // ÈáçË¶ÅÔºöÂêåÊ≠•ÂÜÖÂÆπÂà∞ÈöêËóèÁöÑtextarea
                const $editor = $richEditor.closest('.comment-editor');
                const $editForm = $richEditor.closest('.edit-comment-form');

                if ($editor.length > 0) {
                    // ÊôÆÈÄöËØÑËÆ∫ÁºñËæëÂô®
                    const $textarea = $editor.find('.comment-content');
                    $textarea.val($richEditor.html());
                } else if ($editForm.length > 0) {
                    // ÁºñËæëËØÑËÆ∫Ë°®Âçï
                    const $textarea = $editForm.find('.edit-content');
                    $textarea.val($richEditor.html());
                }

                KanbanApp.showAlert('ÂõæÁâá‰∏ä‰º†ÊàêÂäü', 'success');
            } else {
                KanbanApp.showAlert('ÂõæÁâá‰∏ä‰º†Â§±Ë¥•: ' + (response.error || 'Êú™Áü•ÈîôËØØ'), 'danger');
            }
        },
        error: function() {
            KanbanApp.showAlert('ÂõæÁâá‰∏ä‰º†Â§±Ë¥•', 'danger');
        }
    });
}

// ÊèíÂÖ•@ÊèêÈÜí
function insertMention($richEditor, $mentionDropdown) {
    // ÁÆÄÂåñÂÆûÁé∞ÔºöÁõ¥Êé•ÊòæÁ§∫Áî®Êà∑ÂàóË°®
    const rect = $richEditor[0].getBoundingClientRect();
    $mentionDropdown.css({
        position: 'absolute',
        top: rect.bottom + 'px',
        left: rect.left + 'px'
    }).show();
}

// ÊèíÂÖ•Áî®Êà∑ÊèêÈÜí
function insertUserMention($richEditor, username, userId) {
    const mention = `@${username} `;

    // Ëé∑ÂèñÂΩìÂâçÈÄâÊã©ÊàñÂÖâÊ†á‰ΩçÁΩÆ
    const selection = window.getSelection();
    if (selection.rangeCount > 0) {
        const range = selection.getRangeAt(0);
        const textNode = document.createTextNode(mention);
        range.insertNode(textNode);
        range.setStartAfter(textNode);
        range.collapse(true);
        selection.removeAllRanges();
        selection.addRange(range);
    } else {
        $richEditor.append(mention);
    }

    $richEditor.focus();
}

// ÊòæÁ§∫ÂÆåÊàê‰ªªÂä°Ê®°ÊÄÅÊ°Ü
function showCompleteModal() {
    $('#completeModal').modal('show');
}

// ÂÆ°Ê†∏ÈÄöËøá
function approveTask() {
    if (confirm('Á°ÆÂÆöË¶ÅÂÆ°Ê†∏ÈÄöËøáÊ≠§‰ªªÂä°ÂêóÔºü')) {
        updateTaskStatus('completed', 'ÂÆ°Ê†∏ÈÄöËøáÔºå‰ªªÂä°Â∑≤ÂÆåÊàêÔºÅ');
    }
}

// ÂÆ°Ê†∏ÊãíÁªù
function rejectTask() {
    if (confirm('Á°ÆÂÆöË¶ÅÊãíÁªùÊ≠§‰ªªÂä°ÂêóÔºü‰ªªÂä°Â∞ÜËøîÂõûÁªôË¥üË¥£‰∫∫ÈáçÊñ∞Â§ÑÁêÜ„ÄÇ')) {
        updateTaskStatus('in_progress', 'ÂÆ°Ê†∏ÊãíÁªùÔºå‰ªªÂä°Â∑≤ËøîÂõûÁªôË¥üË¥£‰∫∫');
    }
}

// Êõ¥Êñ∞‰ªªÂä°Áä∂ÊÄÅ
function updateTaskStatus(newStatus, message) {
    const taskId = window.taskId;

    $.ajax({
        url: `/tasks/${taskId}/status`,
        method: 'POST',
        data: { status: newStatus },
        success: function(response) {
            if (response.success) {
                KanbanApp.showAlert(message || response.message, 'success');
                // Âà∑Êñ∞È°µÈù¢‰ª•ÊòæÁ§∫ÊúÄÊñ∞Áä∂ÊÄÅ
                setTimeout(() => {
                    window.location.reload();
                }, 1500);
            } else {
                KanbanApp.showAlert(response.message, 'danger');
            }
        },
        error: function(xhr) {
            const response = xhr.responseJSON;
            KanbanApp.showAlert(response?.message || 'Êìç‰ΩúÂ§±Ë¥•', 'danger');
        }
    });
}
</script>

<style>
/* ÂØåÊñáÊú¨ÂÜÖÂÆπÊ†∑Âºè */
.rich-text-content {
    line-height: 1.6;
}

.rich-text-content img {
    max-width: 100%;
    height: auto;
    border-radius: 4px;
    margin: 10px 0;
}

.rich-text-content p {
    margin-bottom: 1rem;
}

.rich-text-content ul, .rich-text-content ol {
    margin-bottom: 1rem;
    padding-left: 2rem;
}

.rich-text-content blockquote {
    border-left: 4px solid #007bff;
    padding-left: 1rem;
    margin: 1rem 0;
    font-style: italic;
    color: #6c757d;
}

.rich-text-content code {
    background-color: #f8f9fa;
    padding: 2px 4px;
    border-radius: 3px;
    font-family: 'Courier New', monospace;
}

.rich-text-content pre {
    background-color: #f8f9fa;
    padding: 1rem;
    border-radius: 4px;
    overflow-x: auto;
}

.rich-text-content table {
    width: 100%;
    border-collapse: collapse;
    margin: 1rem 0;
}

.rich-text-content table th,
.rich-text-content table td {
    border: 1px solid #dee2e6;
    padding: 8px 12px;
    text-align: left;
}

.rich-text-content table th {
    background-color: #f8f9fa;
    font-weight: 600;
}

/* ËØÑËÆ∫Á≥ªÁªüÊ†∑Âºè */
.comments-section {
    margin-top: 2rem;
}

.comment-item {
    margin-bottom: 1.5rem;
}

.comment-main {
    background-color: #fff;
    border: 1px solid #e1e5e9;
    border-radius: 0.5rem;
    padding: 1rem;
}

.comment-header {
    display: flex;
    justify-content: between;
    align-items: center;
    margin-bottom: 0.75rem;
}

.comment-author {
    display: flex;
    align-items: center;
    flex-grow: 1;
}

.comment-role .badge {
    font-size: 0.7rem;
}

.comment-time {
    color: #6c757d;
    font-size: 0.875rem;
}

.comment-content {
    margin-bottom: 0.75rem;
    color: #333;
}

.comment-actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.comment-buttons .btn {
    padding: 0.25rem 0.5rem;
    font-size: 0.875rem;
    color: #6c757d;
    text-decoration: none;
}

.comment-buttons .btn:hover {
    color: #007bff;
    text-decoration: none;
}

.comment-buttons .btn.text-danger:hover {
    color: #dc3545 !important;
}

/* ÂõûÂ§çÊ†∑Âºè */
.comment-replies {
    margin-top: 1rem;
    margin-left: 40px;
    border-left: 2px solid #e1e5e9;
    padding-left: 20px;
    position: relative;
}

.comment-reply {
    margin-bottom: 1rem;
    position: relative;
}

.reply-connector {
    position: absolute;
    left: -22px;
    top: 1rem;
    width: 20px;
    height: 2px;
    background-color: #e1e5e9;
}

.reply-content {
    background-color: #f8f9fa;
    border: 1px solid #e1e5e9;
    border-radius: 0.375rem;
    padding: 0.75rem;
}

.reply-to {
    color: #007bff;
    font-size: 0.875rem;
}

.load-more-replies {
    margin-top: 0.5rem;
    text-align: center;
}

.load-more-replies .btn {
    color: #6c757d;
    font-size: 0.875rem;
}

/* Êó†ËØÑËÆ∫Áä∂ÊÄÅ */
.no-comments {
    color: #6c757d;
    padding: 3rem 1rem;
}

/* ÂìçÂ∫îÂºèËÆæËÆ° */
@media (max-width: 768px) {
    .comment-replies {
        margin-left: 20px;
        padding-left: 15px;
    }

    .comment-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
    }

    .comment-actions {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
    }
}

@media (max-width: 576px) {
    .comment-replies {
        margin-left: 15px;
        padding-left: 10px;
    }

    .comment-main,
    .reply-content {
        padding: 0.75rem;
    }
}

/* Á¥´Ëâ≤ÂæΩÁ´†Ê†∑Âºè */
.badge.bg-purple {
    background-color: #6f42c1 !important;
}
</style>

<%- include('../partials/footer') %>
