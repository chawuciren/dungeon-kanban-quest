<%- include('../partials/header', { title: title }) %>

<%
// Â§ÑÁêÜË°®ÂçïÊï∞ÊçÆÊÅ¢Â§ç
const formData = locals.formData || {};
const getValue = (field, defaultValue = '') => {
    if (formData[field] !== undefined) {
        return formData[field];
    }
    if (task && task[field] !== undefined) {
        return task[field];
    }
    return defaultValue;
};
%>

<div class="row justify-content-center">
    <div class="col-lg-8">
            <!-- È°µÈù¢Ê†áÈ¢ò -->
            <div class="mb-4">
                <h2>
                    <% if (task) { %>
                        <i class="fas fa-edit me-2 text-primary"></i>
                        ÁºñËæë‰ªªÂä°
                    <% } else { %>
                        <i class="fas fa-plus me-2 text-primary"></i>
                        <%= parentTask ? 'ÂàõÂª∫Â≠ê‰ªªÂä°' : 'ÂàõÂª∫‰ªªÂä°' %>
                    <% } %>
                </h2>
                <% if (task) { %>
                    <p class="text-muted mb-0">
                        ‰øÆÊîπ‰ªªÂä°‰ø°ÊÅØÂíåÂàÜÈÖç
                    </p>
                <% } else if (parentTask) { %>
                    <p class="text-muted mb-0">
                        Áà∂‰ªªÂä°Ôºö<a href="/tasks/<%= parentTask.id %>" class="text-decoration-none"><%= parentTask.title %></a>
                    </p>
                <% } %>
            </div>

            <!-- Ë°®Âçï -->
            <div class="card">
                <div class="card-body">
                    <form action="<%= task ? `/tasks/${task.id}/edit` : '/tasks/create' %>" method="POST" class="needs-validation" novalidate>
                        <!-- ÈöêËóèÂ≠óÊÆµ -->
                        <% if (!task && parentTask) { %>
                            <input type="hidden" name="parentTaskId" value="<%= parentTask.id %>">
                            <input type="hidden" name="projectId" value="<%= parentTask.projectId %>">
                        <% } %>
                        <!-- Âü∫Êú¨‰ø°ÊÅØ -->
                        <div class="row">
                            <div class="col-12 mb-3">
                                <label for="title" class="form-label">‰ªªÂä°Ê†áÈ¢ò <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="title" name="title" value="<%= getValue('title') %>" required>
                                <div class="invalid-feedback">ËØ∑ËæìÂÖ•‰ªªÂä°Ê†áÈ¢ò</div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-12 mb-3">
                                <label for="description" class="form-label">‰ªªÂä°ÊèèËø∞ <span class="text-danger">*</span></label>
                                <div class="rich-editor">
                                    <div class="rich-editor-toolbar">
                                        <button type="button" class="rich-editor-btn" data-command="bold" title="Á≤ó‰Ωì">
                                            <i class="fas fa-bold"></i>
                                        </button>
                                        <button type="button" class="rich-editor-btn" data-command="italic" title="Êñú‰Ωì">
                                            <i class="fas fa-italic"></i>
                                        </button>
                                        <button type="button" class="rich-editor-btn" data-command="underline" title="‰∏ãÂàíÁ∫ø">
                                            <i class="fas fa-underline"></i>
                                        </button>
                                        <span class="rich-editor-separator"></span>
                                        <button type="button" class="rich-editor-btn" data-command="insertUnorderedList" title="Êó†Â∫èÂàóË°®">
                                            <i class="fas fa-list-ul"></i>
                                        </button>
                                        <button type="button" class="rich-editor-btn" data-command="insertOrderedList" title="ÊúâÂ∫èÂàóË°®">
                                            <i class="fas fa-list-ol"></i>
                                        </button>
                                        <span class="rich-editor-separator"></span>
                                        <button type="button" class="rich-editor-btn" data-command="createLink" title="ÊèíÂÖ•ÈìæÊé•">
                                            <i class="fas fa-link"></i>
                                        </button>
                                        <button type="button" class="rich-editor-btn" id="insertImageBtn" title="ÊèíÂÖ•ÂõæÁâá">
                                            <i class="fas fa-image"></i>
                                        </button>
                                        <span class="rich-editor-separator"></span>
                                        <button type="button" class="rich-editor-btn" data-command="removeFormat" title="Ê∏ÖÈô§Ê†ºÂºè">
                                            <i class="fas fa-remove-format"></i>
                                        </button>
                                    </div>
                                    <div class="rich-editor-content" contenteditable="true" id="richEditor">
                                        <%- getValue('description') %>
                                    </div>
                                </div>
                                <textarea class="form-control d-none" id="description" name="description" required><%- getValue('description') %></textarea>
                                <div class="invalid-feedback">ËØ∑ËæìÂÖ•‰ªªÂä°ÊèèËø∞</div>
                                <div class="form-text">ÊîØÊåÅÂØåÊñáÊú¨ÁºñËæëÔºåÂèØÊèíÂÖ•ÂõæÁâá„ÄÅÈìæÊé•Á≠âÂÜÖÂÆπ</div>

                                <!-- ÂõæÁâá‰∏ä‰º†ÈöêËóèË°®Âçï -->
                                <input type="file" id="imageUpload" accept="image/*" style="display: none;">
                            </div>
                        </div>

                        <!-- È°πÁõÆ‰ø°ÊÅØ -->
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">ÊâÄÂ±ûÈ°πÁõÆ</label>
                                <div class="form-control-plaintext bg-light border rounded px-3 py-2">
                                    <i class="fas fa-globe me-2 text-primary"></i>
                                    <% if (task && task.project) { %>
                                        [<%= task.project.key %>] <%= task.project.name %>
                                    <% } else if (projects && projects.length > 0) { %>
                                        [<%= projects[0].key %>] <%= projects[0].name %>
                                    <% } else { %>
                                        Êú™ÈÄâÊã©È°πÁõÆ
                                    <% } %>
                                </div>
                                <div class="form-text"><%= task ? '‰ªªÂä°ÊâÄÂ±ûÁöÑÈ°πÁõÆ' : 'ÂΩìÂâçÈÄâ‰∏≠ÁöÑÈ°πÁõÆ' %></div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="taskType" class="form-label">‰ªªÂä°Á±ªÂûã <span class="text-danger">*</span></label>
                                <select class="form-select" id="taskType" name="taskType" required>
                                    <option value="">ÈÄâÊã©‰ªªÂä°Á±ªÂûã</option>

                                    <%
                                    // Ëé∑ÂèñÁî®Êà∑ËÆæÁΩÆÁöÑÈªòËÆ§‰ªªÂä°Á±ªÂûãÔºåÂ¶ÇÊûúÊ≤°ÊúâËÆæÁΩÆÂàô‰ΩøÁî® 'task'
                                    const defaultTaskType = !task && userSettings && userSettings.defaultTaskType ? userSettings.defaultTaskType : 'task';
                                    %>

                                    <!-- Âè≤ËØó - ÁÆ°ÁêÜÂëò„ÄÅ‰∫ßÂìÅÁªèÁêÜ„ÄÅÂÆ¢Êà∑ÂèØÂàõÂª∫ -->
                                    <% if (user && (user.role === 'admin' || user.role === 'product_manager' || user.role === 'client')) { %>
                                        <option value="epic" <%= getValue('taskType', !task ? defaultTaskType : '') === 'epic' ? 'selected' : '' %>>üè∞ Âè≤ËØó</option>
                                    <% } %>

                                    <!-- Áî®Êà∑ÊïÖ‰∫ã - ÁÆ°ÁêÜÂëò„ÄÅ‰∫ßÂìÅÁªèÁêÜ„ÄÅÂÆ¢Êà∑ÂèØÂàõÂª∫ -->
                                    <% if (user && (user.role === 'admin' || user.role === 'product_manager' || user.role === 'client')) { %>
                                        <option value="story" <%= getValue('taskType', !task ? defaultTaskType : '') === 'story' ? 'selected' : '' %>>üìñ Áî®Êà∑ÊïÖ‰∫ã</option>
                                    <% } %>

                                    <!-- ÈúÄÊ±Ç - ÁÆ°ÁêÜÂëò„ÄÅ‰∫ßÂìÅÁªèÁêÜÂèØÂàõÂª∫ -->
                                    <% if (user && (user.role === 'admin' || user.role === 'product_manager')) { %>
                                        <option value="requirement" <%= getValue('taskType', !task ? defaultTaskType : '') === 'requirement' ? 'selected' : '' %>>üìã ÈúÄÊ±Ç</option>
                                    <% } %>

                                    <!-- ÂºÄÂèë‰ªªÂä° - ÁÆ°ÁêÜÂëò„ÄÅ‰∫ßÂìÅÁªèÁêÜ„ÄÅÂºÄÂèëËÄÖÂèØÂàõÂª∫ -->
                                    <% if (user && (user.role === 'admin' || user.role === 'product_manager' || user.role === 'developer')) { %>
                                        <option value="dev_task" <%= getValue('taskType', !task ? defaultTaskType : '') === 'dev_task' ? 'selected' : '' %>>‚öîÔ∏è ÂºÄÂèë‰ªªÂä°</option>
                                    <% } %>

                                    <!-- ËÆæËÆ°‰ªªÂä° - ÁÆ°ÁêÜÂëò„ÄÅ‰∫ßÂìÅÁªèÁêÜ„ÄÅUIËÆæËÆ°Â∏àÂèØÂàõÂª∫ -->
                                    <% if (user && (user.role === 'admin' || user.role === 'product_manager' || user.role === 'ui_designer')) { %>
                                        <option value="design_task" <%= getValue('taskType', !task ? defaultTaskType : '') === 'design_task' ? 'selected' : '' %>>üé® ËÆæËÆ°‰ªªÂä°</option>
                                    <% } %>

                                    <!-- ÊµãËØï‰ªªÂä° - ÁÆ°ÁêÜÂëò„ÄÅ‰∫ßÂìÅÁªèÁêÜ„ÄÅÊµãËØïÂëòÂèØÂàõÂª∫ -->
                                    <% if (user && (user.role === 'admin' || user.role === 'product_manager' || user.role === 'tester')) { %>
                                        <option value="test_task" <%= getValue('taskType', !task ? defaultTaskType : '') === 'test_task' ? 'selected' : '' %>>üèπ ÊµãËØï‰ªªÂä°</option>
                                    <% } %>

                                    <!-- ËøêÁª¥‰ªªÂä° - ÁÆ°ÁêÜÂëò„ÄÅ‰∫ßÂìÅÁªèÁêÜ„ÄÅËøêÁª¥Â∑•Á®ãÂ∏àÂèØÂàõÂª∫ -->
                                    <% if (user && (user.role === 'admin' || user.role === 'product_manager' || user.role === 'devops')) { %>
                                        <option value="devops_task" <%= getValue('taskType', !task ? defaultTaskType : '') === 'devops_task' ? 'selected' : '' %>>‚öôÔ∏è ËøêÁª¥‰ªªÂä°</option>
                                    <% } %>

                                    <!-- ÈÄöÁî®‰ªªÂä° - ÊâÄÊúâËßíËâ≤ÈÉΩÂèØÂàõÂª∫ -->
                                    <option value="task" <%= getValue('taskType', !task ? defaultTaskType : '') === 'task' ? 'selected' : '' %>>üìù ÈÄöÁî®‰ªªÂä°</option>

                                    <!-- Bug - ÁÆ°ÁêÜÂëò„ÄÅ‰∫ßÂìÅÁªèÁêÜ„ÄÅÊµãËØïÂëòÂèØÂàõÂª∫ -->
                                    <% if (user && (user.role === 'admin' || user.role === 'product_manager' || user.role === 'tester')) { %>
                                        <option value="bug" <%= getValue('taskType', !task ? defaultTaskType : '') === 'bug' ? 'selected' : '' %>>üêõ Áº∫Èô∑</option>
                                    <% } %>
                                </select>
                                <div class="invalid-feedback">ËØ∑ÈÄâÊã©‰ªªÂä°Á±ªÂûã</div>
                                <div class="form-text">Ê†πÊçÆÊÇ®ÁöÑËßíËâ≤ÊòæÁ§∫ÂèØÂàõÂª∫ÁöÑ‰ªªÂä°Á±ªÂûã</div>
                            </div>
                        </div>

                        <!-- Áà∂‰ªªÂä°ÈÄâÊã© -->
                        <% if ((!task && !parentTask && projectTasks && projectTasks.length > 0) || (task && projectTasks && projectTasks.length > 0)) { %>
                            <div class="row">
                                <div class="col-12 mb-3">
                                    <label for="parentTaskId" class="form-label">Áà∂‰ªªÂä°ÔºàÂèØÈÄâÔºâ</label>
                                    <select class="form-select" id="parentTaskId" name="parentTaskId">
                                        <option value="">Êó†Áà∂‰ªªÂä°ÔºàÊ†π‰ªªÂä°Ôºâ</option>
                                        <% projectTasks.forEach(projectTask => { %>
                                            <option value="<%= projectTask.id %>" <%= getValue('parentTaskId', task ? task.parentTaskId : '') === projectTask.id ? 'selected' : '' %>>
                                                <%= projectTask.title %>
                                                <% if (projectTask.taskType !== 'task') { %>
                                                    Ôºà<%= projectTask.taskType === 'requirement' ? 'üìã ÈúÄÊ±Ç' :
                                                         projectTask.taskType === 'epic' ? 'üè∞ Âè≤ËØó' :
                                                         projectTask.taskType === 'story' ? 'üìñ Áî®Êà∑ÊïÖ‰∫ã' :
                                                         projectTask.taskType === 'dev_task' ? '‚öîÔ∏è ÂºÄÂèë‰ªªÂä°' :
                                                         projectTask.taskType === 'design_task' ? 'üé® ËÆæËÆ°‰ªªÂä°' :
                                                         projectTask.taskType === 'test_task' ? 'üèπ ÊµãËØï‰ªªÂä°' :
                                                         projectTask.taskType === 'devops_task' ? '‚öôÔ∏è ËøêÁª¥‰ªªÂä°' :
                                                         projectTask.taskType === 'bug' ? 'üêõ Áº∫Èô∑' : projectTask.taskType %>Ôºâ
                                                <% } %>
                                            </option>
                                        <% }); %>
                                    </select>
                                    <div class="form-text">ÈÄâÊã©Ê≠§‰ªªÂä°ÁöÑÁà∂‰ªªÂä°ÔºåÁî®‰∫éÂª∫Á´ã‰ªªÂä°Â±ÇÁ∫ßÂÖ≥Á≥ª</div>
                                </div>
                            </div>
                        <% } %>

                        <!-- ‰ªªÂä°Â±ûÊÄß -->
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="starLevel" class="form-label">ÊòüÁ∫ßÈöæÂ∫¶ <span class="text-danger">*</span></label>
                                <select class="form-select" id="starLevel" name="starLevel" required>
                                    <option value="">ÈÄâÊã©ÈöæÂ∫¶</option>
                                    <option value="1" <%= getValue('starLevel', 1) == 1 ? 'selected' : '' %>>‚≠ê ‰∏ÄÊòü - ÁÆÄÂçï‰ªªÂä°ÔºàÂçäÂ§©ÂÜÖÔºâ</option>
                                    <option value="2" <%= getValue('starLevel') == 2 ? 'selected' : '' %>>‚≠ê‚≠ê ‰∫åÊòü - Â∏∏ËßÑ‰ªªÂä°Ôºà1-2Â§©Ôºâ</option>
                                    <option value="3" <%= getValue('starLevel') == 3 ? 'selected' : '' %>>‚≠ê‚≠ê‚≠ê ‰∏âÊòü - Â§çÊùÇ‰ªªÂä°Ôºà3-5Â§©Ôºâ</option>
                                    <option value="4" <%= getValue('starLevel') == 4 ? 'selected' : '' %>>‚≠ê‚≠ê‚≠ê‚≠ê ÂõõÊòü - Ê†∏ÂøÉ‰ªªÂä°Ôºà1-2Âë®Ôºâ</option>
                                    <option value="5" <%= getValue('starLevel') == 5 ? 'selected' : '' %>>‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê ‰∫îÊòü - ÂÖ≥ÈîÆ‰ªªÂä°Ôºà2Âë®‰ª•‰∏äÔºâ</option>
                                </select>
                                <div class="invalid-feedback">ËØ∑ÈÄâÊã©‰ªªÂä°ÈöæÂ∫¶</div>
                            </div>

                            <div class="col-md-6 mb-3">
                                <label for="urgencyLevel" class="form-label">Á¥ßÊÄ•Á®ãÂ∫¶ <span class="text-danger">*</span></label>
                                <select class="form-select" id="urgencyLevel" name="urgencyLevel" required>
                                    <option value="">ÈÄâÊã©Á¥ßÊÄ•Á®ãÂ∫¶</option>
                                    <option value="normal" <%= getValue('urgencyLevel', !task ? 'normal' : '') === 'normal' ? 'selected' : '' %>>üìÖ ÊôÆÈÄö</option>
                                    <option value="important" <%= getValue('urgencyLevel') === 'important' ? 'selected' : '' %>>‚ö° ÈáçË¶Å</option>
                                    <option value="urgent" <%= getValue('urgencyLevel') === 'urgent' ? 'selected' : '' %>>üî• Á¥ßÊÄ•</option>
                                    <option value="delayed" <%= getValue('urgencyLevel') === 'delayed' ? 'selected' : '' %>>üïê Âª∂Âêé</option>
                                    <option value="frozen" <%= getValue('urgencyLevel') === 'frozen' ? 'selected' : '' %>>‚ùÑÔ∏è ÂÜªÁªì</option>
                                </select>
                                <div class="invalid-feedback">ËØ∑ÈÄâÊã©Á¥ßÊÄ•Á®ãÂ∫¶</div>
                            </div>

                        </div>

                        <!-- ‰ªªÂä°Áä∂ÊÄÅÔºà‰ªÖÁºñËæëÊ®°ÂºèÔºâ -->
                        <% if (task) { %>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="status" class="form-label">‰ªªÂä°Áä∂ÊÄÅ</label>
                                    <select class="form-select" id="status" name="status">
                                        <option value="draft" <%= task.status === 'draft' ? 'selected' : '' %>>ËçâÁ®ø</option>
                                        <option value="published" <%= task.status === 'published' ? 'selected' : '' %>>Â∑≤ÂèëÂ∏É</option>
                                        <option value="in_progress" <%= task.status === 'in_progress' ? 'selected' : '' %>>ËøõË°å‰∏≠</option>
                                        <option value="review" <%= task.status === 'review' ? 'selected' : '' %>>ÂæÖÂÆ°Ê†∏</option>
                                        <option value="completed" <%= task.status === 'completed' ? 'selected' : '' %>>Â∑≤ÂÆåÊàê</option>
                                        <option value="cancelled" <%= task.status === 'cancelled' ? 'selected' : '' %>>Â∑≤ÂèñÊ∂à</option>
                                    </select>
                                    <div class="form-text">Ê†πÊçÆ‰ªªÂä°ËøõÂ±ïÈÄâÊã©ÂêàÈÄÇÁöÑÁä∂ÊÄÅ</div>
                                </div>
                            </div>
                        <% } %>

                        <!-- Êó∂Èó¥ËÆæÁΩÆ -->
                        <div class="row">
                            <div class="col-md-3 mb-3">
                                <label for="estimatedHours" class="form-label">È¢Ñ‰º∞Â∑•Êó∂ÔºàÂ∞èÊó∂Ôºâ <span class="text-danger">*</span></label>
                                <input type="number" class="form-control" id="estimatedHours" name="estimatedHours" min="0.5" step="0.5" value="<%= getValue('estimatedHours', !task ? '0' : '') %>" required>
                                <div class="invalid-feedback">ËØ∑ËæìÂÖ•È¢Ñ‰º∞Â∑•Êó∂</div>
                                <div class="form-text">Áî®‰∫éÂ∑•Êó∂ÁÆ°ÁêÜ</div>
                            </div>
                            <% if (task) { %>
                            <div class="col-md-3 mb-3">
                                <label for="actualHours" class="form-label">ÂÆûÈôÖÂ∑•Êó∂ÔºàÂ∞èÊó∂Ôºâ</label>
                                <input type="number" class="form-control" id="actualHours" name="actualHours" min="0" step="0.5" value="<%= getValue('actualHours') %>">
                                <div class="form-text">
                                    <% if (task.estimatedHours && getValue('actualHours')) { %>
                                        <% const estimated = parseFloat(task.estimatedHours); %>
                                        <% const actual = parseFloat(getValue('actualHours')); %>
                                        <% if (actual > estimated) { %>
                                            <span class="text-warning">Ë∂ÖÂá∫È¢Ñ‰º∞ <%= (actual - estimated).toFixed(1) %> Â∞èÊó∂</span>
                                        <% } else if (actual < estimated) { %>
                                            <span class="text-success">ËäÇÁúÅ <%= (estimated - actual).toFixed(1) %> Â∞èÊó∂</span>
                                        <% } else { %>
                                            <span class="text-info">‰∏éÈ¢Ñ‰º∞‰∏ÄËá¥</span>
                                        <% } %>
                                    <% } else { %>
                                        ÂÆûÈôÖÊ∂àËÄóÁöÑÂ∑•Êó∂
                                    <% } %>
                                </div>
                            </div>
                            <div class="col-md-3 mb-3">
                                <label for="progress" class="form-label">ÂÆåÊàêËøõÂ∫¶</label>
                                <div class="input-group">
                                    <input type="number" class="form-control" id="progress" name="progress" min="0" max="100" step="5" value="<%= getValue('progress', task ? task.progress : 0) %>">
                                    <span class="input-group-text">%</span>
                                </div>
                                <div class="form-text">
                                    <% const currentProgress = getValue('progress', task ? task.progress : 0); %>
                                    <% if (currentProgress == 0) { %>
                                        <span class="text-muted">Êú™ÂºÄÂßã</span>
                                    <% } else if (currentProgress < 25) { %>
                                        <span class="text-info">ÂàöÂºÄÂßã</span>
                                    <% } else if (currentProgress < 50) { %>
                                        <span class="text-primary">ËøõË°å‰∏≠</span>
                                    <% } else if (currentProgress < 75) { %>
                                        <span class="text-warning">Â§ßÈÉ®ÂàÜÂÆåÊàê</span>
                                    <% } else if (currentProgress < 100) { %>
                                        <span class="text-success">Âç≥Â∞ÜÂÆåÊàê</span>
                                    <% } else { %>
                                        <span class="text-success">Â∑≤ÂÆåÊàê</span>
                                    <% } %>
                                </div>
                            </div>
                            <% } %>
                            <div class="col-md-3 mb-3">
                                <label for="startDate" class="form-label">Ëµ∑ÂßãÊó•Êúü <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="startDate" name="startDate" value="<%= getValue('startDate') && getValue('startDate') !== '' ? (typeof getValue('startDate') === 'string' && getValue('startDate').includes('-') ? getValue('startDate') : new Date(getValue('startDate')).toISOString().split('T')[0]) : '' %>" required>
                                <div class="invalid-feedback">ËØ∑ÈÄâÊã©Ëµ∑ÂßãÊó•Êúü</div>
                                <div class="form-text">‰ªªÂä°ËÆ°ÂàíÂºÄÂßãÊó∂Èó¥</div>
                            </div>
                            <div class="col-md-3 mb-3">
                                <label for="dueDate" class="form-label">Êà™Ê≠¢Êó•Êúü <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="dueDate" name="dueDate" value="<%= getValue('dueDate') && getValue('dueDate') !== '' ? (typeof getValue('dueDate') === 'string' && getValue('dueDate').includes('-') ? getValue('dueDate') : new Date(getValue('dueDate')).toISOString().split('T')[0]) : '' %>" required>
                                <div class="invalid-feedback">ËØ∑ÈÄâÊã©Êà™Ê≠¢Êó•Êúü</div>
                                <div class="form-text">‰ªªÂä°ÂøÖÈ°ªÂÆåÊàêÊó∂Èó¥</div>
                            </div>
                        </div>

                        <!-- Ëø≠‰ª£ÈÄâÊã© -->
                        <% if (sprints && sprints.length > 0) { %>
                            <div class="row">
                                <div class="col-12 mb-3">
                                    <label for="sprintId" class="form-label">ÊâÄÂ±ûËø≠‰ª£ÔºàÂèØÈÄâÔºâ</label>
                                    <select class="form-select" id="sprintId" name="sprintId">
                                        <option value="">‰∏çÂ±û‰∫é‰ªª‰ΩïËø≠‰ª£</option>
                                        <% sprints.forEach(sprint => { %>
                                            <option value="<%= sprint.id %>" <%= task && task.sprintId === sprint.id ? 'selected' : '' %>>
                                                <%= sprint.name %>
                                                <% if (sprint.status === 'active') { %>
                                                    ÔºàËøõË°å‰∏≠Ôºâ
                                                <% } else if (sprint.status === 'planning') { %>
                                                    ÔºàËÆ°Âàí‰∏≠Ôºâ
                                                <% } else if (sprint.status === 'completed') { %>
                                                    ÔºàÂ∑≤ÂÆåÊàêÔºâ
                                                <% } else if (sprint.status === 'cancelled') { %>
                                                    ÔºàÂ∑≤ÂèñÊ∂àÔºâ
                                                <% } %>
                                                - <%= new Date(sprint.startDate).toLocaleDateString('zh-CN') %> Ëá≥ <%= new Date(sprint.endDate).toLocaleDateString('zh-CN') %>
                                            </option>
                                        <% }); %>
                                    </select>
                                    <div class="form-text">ÈÄâÊã©‰ªªÂä°ÊâÄÂ±ûÁöÑËø≠‰ª£ÔºåÂèØ‰ª•‰∏çÈÄâÊã©</div>
                                </div>
                            </div>
                        <% } %>

                        <!-- ‰∫∫ÂëòÂàÜÈÖç -->
                        <% if (projectMembers && projectMembers.length > 0) { %>
                            <div class="row">
                                <div class="col-12 mb-3">
                                    <h6 class="text-primary">
                                        <i class="fas fa-users me-2"></i>‰∫∫ÂëòÂàÜÈÖç
                                    </h6>
                                    <div class="form-text mb-3">‰∏∫‰ªªÂä°ÂàÜÈÖçË¥üË¥£‰∫∫„ÄÅÂèÇ‰∏é‰∫∫ÂíåÂÆ°Ê†∏‰∫∫</div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4 mb-3">
                                    <label for="assigneeId" class="form-label">Ë¥üË¥£‰∫∫ <span class="text-danger">*</span></label>
                                    <select class="form-select" id="assigneeId" name="assigneeId" required>
                                        <option value="">ÈÄâÊã©Ë¥üË¥£‰∫∫</option>
                                        <% projectMembers.forEach(member => { %>
                                            <option value="<%= member.user.id %>" <%= getValue('assigneeId') === member.user.id ? 'selected' : '' %>>
                                                <%= member.user.firstName %> <%= member.user.lastName %>
                                                <% if (member.user.role === 'product_manager') { %>Ôºà‰∫ßÂìÅÁªèÁêÜÔºâ
                                                <% } else if (member.user.role === 'developer') { %>ÔºàÂºÄÂèëËÄÖÔºâ
                                                <% } else if (member.user.role === 'tester') { %>ÔºàÊµãËØïÂ∑•Á®ãÂ∏àÔºâ
                                                <% } else if (member.user.role === 'ui_designer') { %>ÔºàUIËÆæËÆ°Â∏àÔºâ
                                                <% } else if (member.user.role === 'devops') { %>ÔºàËøêÁª¥Â∑•Á®ãÂ∏àÔºâ
                                                <% } else if (member.user.role === 'client') { %>ÔºàÂÆ¢Êà∑Ôºâ
                                                <% } else { %>Ôºà<%= member.user.role %>Ôºâ<% } %>
                                            </option>
                                        <% }); %>
                                    </select>
                                    <div class="invalid-feedback">ËØ∑ÈÄâÊã©Ë¥üË¥£‰∫∫</div>
                                    <div class="form-text">‰∏ªË¶ÅË¥üË¥£‰ªªÂä°ÊâßË°åÁöÑ‰∫∫Âëò</div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label class="form-label d-flex justify-content-between align-items-center">
                                        ÂèÇ‰∏é‰∫∫
                                        <% if (projectMembers && projectMembers.length > 0) { %>
                                            <div class="btn-group btn-group-sm" role="group">
                                                <button type="button" class="btn btn-outline-secondary btn-sm" id="selectAllAssistants">ÂÖ®ÈÄâ</button>
                                                <button type="button" class="btn btn-outline-secondary btn-sm" id="clearAllAssistants">Ê∏ÖÁ©∫</button>
                                            </div>
                                        <% } %>
                                    </label>
                                    <div class="assistant-list border rounded p-3" style="max-height: 200px; overflow-y: auto; background-color: #fafbfc;">
                                        <% if (projectMembers && projectMembers.length > 0) { %>
                                            <% projectMembers.forEach(member => { %>
                                                <div class="assistant-item" data-user-id="<%= member.user.id %>">
                                                    <div class="d-flex align-items-center">
                                                        <input class="form-check-input me-3" type="checkbox"
                                                               name="assistantIds"
                                                               value="<%= member.user.id %>"
                                                               id="assistant_<%= member.user.id %>"
                                                               <%= getValue('assistantIds') && Array.isArray(getValue('assistantIds')) && getValue('assistantIds').includes(member.user.id) ? 'checked' : (task && task.assistantIds && task.assistantIds.includes(member.user.id) ? 'checked' : '') %>>
                                                        <div class="flex-grow-1">
                                                            <div class="d-flex justify-content-between align-items-center">
                                                                <span class="fw-medium">
                                                                    <%= member.user.firstName %> <%= member.user.lastName %>
                                                                </span>
                                                                <small class="text-muted">
                                                                    <% if (member.user.role === 'product_manager') { %>‰∫ßÂìÅÁªèÁêÜ
                                                                    <% } else if (member.user.role === 'developer') { %>ÂºÄÂèëËÄÖ
                                                                    <% } else if (member.user.role === 'tester') { %>ÊµãËØïÂ∑•Á®ãÂ∏à
                                                                    <% } else if (member.user.role === 'ui_designer') { %>UIËÆæËÆ°Â∏à
                                                                    <% } else if (member.user.role === 'devops') { %>ËøêÁª¥Â∑•Á®ãÂ∏à
                                                                    <% } else if (member.user.role === 'client') { %>ÂÆ¢Êà∑
                                                                    <% } else { %><%= member.user.role %><% } %>
                                                                </small>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            <% }); %>
                                        <% } else { %>
                                            <div class="text-muted text-center py-3">
                                                <i class="fas fa-users fa-2x mb-2"></i>
                                                <div><small>ÊöÇÊó†È°πÁõÆÊàêÂëò</small></div>
                                            </div>
                                        <% } %>
                                    </div>
                                    <div class="form-text">ÂèÇ‰∏éÂÆåÊàê‰ªªÂä°ÁöÑ‰∫∫ÂëòÔºàÂèØÂ§öÈÄâÔºâ</div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="reviewerId" class="form-label">ÂÆ°Ê†∏‰∫∫ <span class="text-danger">*</span></label>
                                    <select class="form-select" id="reviewerId" name="reviewerId" required>
                                        <option value="">ÈÄâÊã©ÂÆ°Ê†∏‰∫∫</option>
                                        <% projectMembers.forEach(member => { %>
                                            <option value="<%= member.user.id %>" <%= getValue('reviewerId') === member.user.id ? 'selected' : '' %>>
                                                <%= member.user.firstName %> <%= member.user.lastName %>
                                                <% if (member.user.role === 'product_manager') { %>Ôºà‰∫ßÂìÅÁªèÁêÜÔºâ
                                                <% } else if (member.user.role === 'developer') { %>ÔºàÂºÄÂèëËÄÖÔºâ
                                                <% } else if (member.user.role === 'tester') { %>ÔºàÊµãËØïÂ∑•Á®ãÂ∏àÔºâ
                                                <% } else if (member.user.role === 'ui_designer') { %>ÔºàUIËÆæËÆ°Â∏àÔºâ
                                                <% } else if (member.user.role === 'devops') { %>ÔºàËøêÁª¥Â∑•Á®ãÂ∏àÔºâ
                                                <% } else if (member.user.role === 'client') { %>ÔºàÂÆ¢Êà∑Ôºâ
                                                <% } else { %>Ôºà<%= member.user.role %>Ôºâ<% } %>
                                            </option>
                                        <% }); %>
                                    </select>
                                    <div class="invalid-feedback">ËØ∑ÈÄâÊã©ÂÆ°Ê†∏‰∫∫</div>
                                    <div class="form-text">Ë¥üË¥£ÂÆ°Ê†∏‰ªªÂä°ÂÆåÊàêÊÉÖÂÜµÁöÑ‰∫∫Âëò</div>
                                </div>
                            </div>
                        <% } %>

                        <!-- ÂΩíÊ°£Áä∂ÊÄÅ -->
                        <% if (task) { %>
                            <div class="row">
                                <div class="col-12 mb-3">
                                    <h6 class="text-primary">
                                        <i class="fas fa-archive me-2"></i>ÂΩíÊ°£ËÆæÁΩÆ
                                    </h6>
                                    <div class="form-text mb-3">ÂΩíÊ°£ÁöÑ‰ªªÂä°Â∞Ü‰ªéÂ∏∏ËßÑËßÜÂõæ‰∏≠ÈöêËóè</div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="isArchived" name="isArchived" value="true" <%= task && task.isArchived ? 'checked' : '' %>>
                                        <label class="form-check-label" for="isArchived">
                                            <i class="fas fa-archive me-2"></i>ÂΩíÊ°£Ê≠§‰ªªÂä°
                                        </label>
                                    </div>
                                    <div class="form-text">ÂΩíÊ°£ÂêéÁöÑ‰ªªÂä°Â∞ÜÂú®Á≠õÈÄâÂô®‰∏≠ÈÄâÊã©"Â∑≤ÂΩíÊ°£"ÊâçËÉΩÊü•Áúã</div>
                                </div>
                            </div>
                        <% } %>

                        <!-- Êèê‰∫§ÊåâÈíÆ -->
                        <div class="row">
                            <div class="col-12">
                                <hr>
                                <div class="d-flex justify-content-between">
                                    <% if (task) { %>
                                        <a href="/tasks/<%= task.id %>" class="btn btn-secondary">
                                            <i class="fas fa-arrow-left me-2"></i>ËøîÂõû
                                        </a>
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fas fa-save me-2"></i>
                                            ‰øùÂ≠ò‰øÆÊîπ
                                        </button>
                                    <% } else { %>
                                        <a href="/tasks" class="btn btn-secondary">
                                            <i class="fas fa-arrow-left me-2"></i>ËøîÂõû
                                        </a>
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fas fa-paper-plane me-2"></i>
                                            <%= parentTask ? 'ÂàõÂª∫Â≠ê‰ªªÂä°' : 'ÂèëÂ∏É‰ªªÂä°' %>
                                        </button>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
    </div>
</div>

<style>
.assistant-list {
    transition: all 0.2s ease;
    background-color: #fafbfc;
}

.assistant-item {
    padding: 10px 15px;
    margin-bottom: 8px;
    border-radius: 8px;
    transition: all 0.3s ease;
    cursor: pointer;
    border: 2px solid transparent;
    background-color: #ffffff;
}

.assistant-item:hover {
    background-color: #f8f9fa;
    border-color: #dee2e6;
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.assistant-item.selected {
    background-color: #e3f2fd !important;
    border-color: #2196f3 !important;
    box-shadow: 0 2px 8px rgba(33, 150, 243, 0.2);
}

.assistant-item.selected:hover {
    background-color: #bbdefb !important;
    border-color: #1976d2 !important;
}

.assistant-item .form-check-input {
    margin-top: 0;
    transform: scale(1.2);
    flex-shrink: 0;
}

.assistant-item.selected .form-check-input {
    accent-color: #2196f3;
}

.assistant-item .flex-grow-1 {
    cursor: pointer;
    min-height: 40px;
    display: flex;
    align-items: center;
}

.assistant-item.selected .fw-medium {
    color: #1565c0;
    font-weight: 600;
}

.assistant-item:hover .fw-medium {
    color: #495057;
}

/* ÊåâÈíÆÊ†∑Âºè‰ºòÂåñ */
#selectAllAssistants, #clearAllAssistants {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
}

#selectAllAssistants:disabled, #clearAllAssistants:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

/* Á©∫Áä∂ÊÄÅÊ†∑Âºè */
.assistant-list .text-muted.text-center {
    padding: 2rem 1rem;
    color: #6c757d;
}
</style>

<%- include('../partials/footer') %>

<!-- È°µÈù¢ÁâπÂÆöJavaScript - ÂøÖÈ°ªÂú®jQueryÂä†ËΩΩ‰πãÂêé -->
<script>
$(document).ready(function() {
    // ÂàùÂßãÂåñÁÆÄÂçïÂØåÊñáÊú¨ÁºñËæëÂô®
    function initRichEditor() {
        const editor = document.getElementById('richEditor');
        const textarea = document.getElementById('description');
        const toolbar = document.querySelector('.rich-editor-toolbar');
        const imageUpload = document.getElementById('imageUpload');
        const insertImageBtn = document.getElementById('insertImageBtn');

        // ÂêåÊ≠•ÂÜÖÂÆπÂà∞ÈöêËóèÁöÑtextarea
        function syncContent() {
            textarea.value = editor.innerHTML;
        }

        // ÁõëÂê¨ÂÜÖÂÆπÂèòÂåñ
        editor.addEventListener('input', syncContent);
        editor.addEventListener('paste', function(e) {
            setTimeout(syncContent, 10); // Âª∂ËøüÂêåÊ≠•ÔºåÁ°Æ‰øùÁ≤òË¥¥ÂÜÖÂÆπÂ∑≤Â§ÑÁêÜ
        });

        // Â∑•ÂÖ∑Ê†èÊåâÈíÆ‰∫ã‰ª∂
        toolbar.addEventListener('click', function(e) {
            if (e.target.classList.contains('rich-editor-btn') || e.target.parentElement.classList.contains('rich-editor-btn')) {
                e.preventDefault();
                const btn = e.target.classList.contains('rich-editor-btn') ? e.target : e.target.parentElement;
                const command = btn.getAttribute('data-command');

                if (command) {
                    if (command === 'createLink') {
                        const url = prompt('ËØ∑ËæìÂÖ•ÈìæÊé•Âú∞ÂùÄ:');
                        if (url) {
                            document.execCommand(command, false, url);
                        }
                    } else {
                        document.execCommand(command, false, null);
                    }

                    // Êõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ
                    updateToolbarState();
                    syncContent();
                }
            }
        });

        // ÊèíÂÖ•ÂõæÁâáÊåâÈíÆ
        insertImageBtn.addEventListener('click', function(e) {
            e.preventDefault();
            imageUpload.click();
        });

        // ÂõæÁâá‰∏ä‰º†Â§ÑÁêÜ
        imageUpload.addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                const formData = new FormData();
                formData.append('taskImage', file);

                fetch('/tasks/upload-image', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        // ÊèíÂÖ•ÂõæÁâáÂà∞ÁºñËæëÂô®
                        const img = document.createElement('img');
                        img.src = result.location;
                        img.style.maxWidth = '100%';
                        img.style.height = 'auto';

                        // Ëé∑ÂèñÂΩìÂâçÈÄâÊã©ÊàñÂÖâÊ†á‰ΩçÁΩÆ
                        const selection = window.getSelection();
                        if (selection.rangeCount > 0) {
                            const range = selection.getRangeAt(0);
                            range.insertNode(img);
                            range.collapse(false);
                        } else {
                            editor.appendChild(img);
                        }

                        syncContent();
                    } else {
                        alert('ÂõæÁâá‰∏ä‰º†Â§±Ë¥•: ' + (result.error || 'Êú™Áü•ÈîôËØØ'));
                    }
                })
                .catch(error => {
                    console.error('ÂõæÁâá‰∏ä‰º†ÈîôËØØ:', error);
                    alert('ÂõæÁâá‰∏ä‰º†Â§±Ë¥•');
                });

                // Ê∏ÖÁ©∫Êñá‰ª∂ËæìÂÖ•
                imageUpload.value = '';
            }
        });

        // Êõ¥Êñ∞Â∑•ÂÖ∑Ê†èÊåâÈíÆÁä∂ÊÄÅ
        function updateToolbarState() {
            const buttons = toolbar.querySelectorAll('.rich-editor-btn[data-command]');
            buttons.forEach(btn => {
                const command = btn.getAttribute('data-command');
                if (document.queryCommandState(command)) {
                    btn.classList.add('active');
                } else {
                    btn.classList.remove('active');
                }
            });
        }

        // ÁõëÂê¨ÈÄâÊã©ÂèòÂåñ‰ª•Êõ¥Êñ∞Â∑•ÂÖ∑Ê†èÁä∂ÊÄÅ
        editor.addEventListener('mouseup', updateToolbarState);
        editor.addEventListener('keyup', updateToolbarState);

        // ÂàùÂßãÂêåÊ≠•
        syncContent();
    }

    // ÂàùÂßãÂåñÂØåÊñáÊú¨ÁºñËæëÂô®
    initRichEditor();

    <% if (!task) { %>
    // ËÆæÁΩÆÈªòËÆ§Êó•Êúü‰∏∫ÂΩìÂ§©Ôºà‰ªÖÂàõÂª∫Ê®°ÂºèÔºâ
    const today = new Date().toISOString().split('T')[0];
    if (!$('#startDate').val()) {
        $('#startDate').val(today);
    }
    if (!$('#dueDate').val()) {
        $('#dueDate').val(today);
    }

    // Ê†πÊçÆÊòüÁ∫ßÊé®ËçêÂ∑•Êó∂Ôºà‰ªÖÂàõÂª∫Ê®°ÂºèÔºâ
    $('#starLevel').change(function() {
        const starLevel = parseInt($(this).val());
        let suggestedHours = 0;

        switch (starLevel) {
            case 1: suggestedHours = 4; break;
            case 2: suggestedHours = 12; break;
            case 3: suggestedHours = 32; break;
            case 4: suggestedHours = 80; break;
            case 5: suggestedHours = 160; break;
        }

        if (suggestedHours > 0 && !$('#estimatedHours').val()) {
            $('#estimatedHours').val(suggestedHours);
        }
    });
    <% } %>

    // Ë°®ÂçïÈ™åËØÅ
    $('form').on('submit', function(e) {
        // Á°Æ‰øùÂØåÊñáÊú¨ÁºñËæëÂô®ÂÜÖÂÆπÂêåÊ≠•Âà∞textarea
        const editor = document.getElementById('richEditor');
        const textarea = document.getElementById('description');
        if (editor && textarea) {
            textarea.value = editor.innerHTML;
        }

        const form = this;
        if (!form.checkValidity()) {
            e.preventDefault();
            e.stopPropagation();
        }
        form.classList.add('was-validated');
    });

    // ÂèÇ‰∏é‰∫∫Áõ∏ÂÖ≥ÂäüËÉΩ
    function initAssistantSelection() {
        console.log('ÂàùÂßãÂåñÂèÇ‰∏é‰∫∫ÈÄâÊã©ÂäüËÉΩ');

        // ÂÖ®ÈÄâÂäüËÉΩ
        $(document).on('click', '#selectAllAssistants', function(e) {
            e.preventDefault();
            console.log('ÂÖ®ÈÄâÊåâÈíÆË¢´ÁÇπÂáª');
            $('input[name="assistantIds"]').prop('checked', true);
            updateAssistantSelection();
        });

        // Ê∏ÖÁ©∫ÂäüËÉΩ
        $(document).on('click', '#clearAllAssistants', function(e) {
            e.preventDefault();
            console.log('Ê∏ÖÁ©∫ÊåâÈíÆË¢´ÁÇπÂáª');
            $('input[name="assistantIds"]').prop('checked', false);
            updateAssistantSelection();
        });

        // ÂèÇ‰∏é‰∫∫ÈÄâÊã©ÂèòÂåñÊó∂ÁöÑËßÜËßâÂèçÈ¶à
        $(document).on('change', 'input[name="assistantIds"]', function() {
            console.log('Â§çÈÄâÊ°ÜÁä∂ÊÄÅÊîπÂèò');
            updateAssistantSelection();
        });

        // ÁÇπÂáªÊï¥‰∏™Êù°ÁõÆ‰πüËÉΩÈÄâ‰∏≠/ÂèñÊ∂àÈÄâ‰∏≠
        $(document).on('click', '.assistant-item', function(e) {
            console.log('ÁÇπÂáª‰∫ÜÊù°ÁõÆÔºåÁõÆÊ†áÂÖÉÁ¥†:', e.target.tagName, e.target.className);

            // Â¶ÇÊûúÁÇπÂáªÁöÑÊòØÂ§çÈÄâÊ°ÜÊú¨Ë∫´ÔºåËÆ©ÂÆÉÊ≠£Â∏∏Â§ÑÁêÜ
            if (e.target.type === 'checkbox') {
                console.log('ÁÇπÂáªÁöÑÊòØÂ§çÈÄâÊ°ÜÔºåÊ≠£Â∏∏Â§ÑÁêÜ');
                return;
            }

            // ÈòªÊ≠¢‰∫ã‰ª∂ÂÜíÊ≥°ÔºåÈò≤Ê≠¢ÈáçÂ§çËß¶Âèë
            e.preventDefault();
            e.stopPropagation();

            // ÂàáÊç¢Â§çÈÄâÊ°ÜÁä∂ÊÄÅ
            const checkbox = $(this).find('input[type="checkbox"]');
            const wasChecked = checkbox.prop('checked');
            checkbox.prop('checked', !wasChecked);

            console.log('ÂàáÊç¢Â§çÈÄâÊ°ÜÁä∂ÊÄÅ:', !wasChecked);

            // Ëß¶Âèëchange‰∫ã‰ª∂‰ª•Êõ¥Êñ∞ËßÜËßâÊïàÊûú
            checkbox.trigger('change');
        });
    }

    function updateAssistantSelection() {
        const checkedCount = $('input[name="assistantIds"]:checked').length;
        const totalCount = $('input[name="assistantIds"]').length;

        console.log(`ÈÄâ‰∏≠Êï∞Èáè: ${checkedCount}, ÊÄªÊï∞Èáè: ${totalCount}`);

        // Êõ¥Êñ∞ÈÄâ‰∏≠È°πÁöÑËßÜËßâÊïàÊûú
        $('.assistant-item').each(function() {
            const checkbox = $(this).find('input[type="checkbox"]');
            if (checkbox.is(':checked')) {
                $(this).addClass('selected');
            } else {
                $(this).removeClass('selected');
            }
        });

        // Êõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ
        if (totalCount > 0) {
            $('#selectAllAssistants').prop('disabled', checkedCount === totalCount);
            $('#clearAllAssistants').prop('disabled', checkedCount === 0);
        }
    }

    // ÂàùÂßãÂåñÂèÇ‰∏é‰∫∫ÂäüËÉΩ
    initAssistantSelection();

    // È°µÈù¢Âä†ËΩΩÂÆåÊàêÂêéÂàùÂßãÂåñÈÄâÊã©Áä∂ÊÄÅ
    setTimeout(function() {
        updateAssistantSelection();
    }, 100);
});
</script>
