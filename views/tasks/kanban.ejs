<%- include('../partials/header', { title: title }) %>

<%- include('../partials/task-header', {
    pageTitle: '‰ªªÂä°ÁúãÊùø',
    currentView: 'kanban',
    currentPath: '/tasks/kanban',
    filters: filters,
    projectMembers: projectMembers
}) %>

<!-- ÁúãÊùøÂàó -->
<div class="row kanban-board">
    <% Object.keys(kanbanColumns).forEach(status => { %>
        <div class="col-xl-2 col-lg-4 col-md-6 mb-4">
            <div class="kanban-column">
                <div class="kanban-header bg-<%= kanbanColumns[status].color %> text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-circle me-2"></i>
                        <%= kanbanColumns[status].title %>
                        <span class="badge bg-light text-dark ms-2">
                            <%= kanbanColumns[status].tasks.length %>
                        </span>
                    </h5>
                </div>
                <div class="kanban-body" data-status="<%= status %>">
                    <% if (kanbanColumns[status].tasks.length > 0) { %>
                        <% kanbanColumns[status].tasks.forEach(task => { %>
                            <div class="kanban-card" data-task-id="<%= task.id %>">
                                <div class="card mb-3">
                                    <div class="card-body p-3">
                                        <!-- ‰ªªÂä°Á±ªÂûãÊ†áÁ≠æ -->
                                        <div class="mb-2">
                                            <span class="badge bg-<%=
                                                task.taskType === 'requirement' ? 'info' :
                                                task.taskType === 'epic' ? 'purple' :
                                                task.taskType === 'story' ? 'primary' :
                                                task.taskType === 'dev_task' ? 'primary' :
                                                task.taskType === 'design_task' ? 'success' :
                                                task.taskType === 'test_task' ? 'warning' :
                                                task.taskType === 'devops_task' ? 'dark' :
                                                task.taskType === 'bug' ? 'danger' : 'secondary'
                                            %> task-type-badge-kanban">
                                                <%= task.taskType === 'requirement' ? 'üìã ÈúÄÊ±Ç' :
                                                    task.taskType === 'epic' ? 'üè∞ Âè≤ËØó' :
                                                    task.taskType === 'story' ? 'üìñ ÊïÖ‰∫ã' :
                                                    task.taskType === 'dev_task' ? '‚öîÔ∏è ÂºÄÂèë' :
                                                    task.taskType === 'design_task' ? 'üé® ËÆæËÆ°' :
                                                    task.taskType === 'test_task' ? 'üèπ ÊµãËØï' :
                                                    task.taskType === 'devops_task' ? '‚öôÔ∏è ËøêÁª¥' :
                                                    task.taskType === 'bug' ? 'üêõ Áº∫Èô∑' : 'üìù ‰ªªÂä°' %>
                                            </span>
                                        </div>

                                        <!-- ‰ªªÂä°Ê†áÈ¢òÂíåÊìç‰ΩúÊåâÈíÆ -->
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <h6 class="card-title mb-0 flex-grow-1">
                                                <a href="/tasks/<%= task.id %>" class="text-decoration-none">
                                                    <%= task.title %>
                                                </a>
                                            </h6>
                                            <%
                                                // Ê£ÄÊü•ÂΩìÂâçÁî®Êà∑ÊòØÂê¶ÊúâÁºñËæëÊùÉÈôê
                                                let canEdit = false;
                                                if (user) {
                                                    // ÁÆ°ÁêÜÂëòÂßãÁªàÊúâÊùÉÈôê
                                                    if (user.role === 'admin') {
                                                        canEdit = true;
                                                    }
                                                    // ÊàëÂàõÂª∫ÁöÑ‰ªªÂä°
                                                    else if (task.publisherId === user.id) {
                                                        canEdit = true;
                                                    }
                                                    // ÊàëË¥üË¥£ÁöÑ‰ªªÂä°
                                                    else if (task.assigneeId === user.id) {
                                                        canEdit = true;
                                                    }
                                                    // ÊàëÂÆ°Ê†∏ÁöÑ‰ªªÂä°
                                                    else if (task.reviewerId === user.id) {
                                                        canEdit = true;
                                                    }
                                                }
                                            %>
                                            <% if (canEdit) { %>
                                                <div class="dropdown">
                                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" onclick="event.stopPropagation();">
                                                        <i class="fas fa-ellipsis-v"></i>
                                                    </button>
                                                    <ul class="dropdown-menu dropdown-menu-end">
                                                        <li><a class="dropdown-item" href="/tasks/<%= task.id %>">
                                                            <i class="fas fa-eye me-2"></i>Êü•ÁúãËØ¶ÊÉÖ
                                                        </a></li>
                                                        <li><a class="dropdown-item" href="/tasks/<%= task.id %>/edit">
                                                            <i class="fas fa-edit me-2"></i>ÁºñËæë
                                                        </a></li>
                                                        <li><hr class="dropdown-divider"></li>
                                                        <% if (task.isArchived) { %>
                                                            <li><a class="dropdown-item text-info" href="#" onclick="event.stopPropagation(); toggleArchiveTask('<%= task.id %>', false)">
                                                                <i class="fas fa-box-open me-2"></i>ÂèñÊ∂àÂΩíÊ°£
                                                            </a></li>
                                                        <% } else { %>
                                                            <li><a class="dropdown-item text-warning" href="#" onclick="event.stopPropagation(); toggleArchiveTask('<%= task.id %>', true)">
                                                                <i class="fas fa-archive me-2"></i>ÂΩíÊ°£
                                                            </a></li>
                                                        <% } %>
                                                    </ul>
                                                </div>
                                            <% } %>
                                        </div>

                                        <!-- ‰ªªÂä°ÂÖÉ‰ø°ÊÅØ -->
                                        <div class="task-meta mb-2">
                                            <span class="badge bg-warning me-1">
                                                <% for(let i = 0; i < task.starLevel; i++) { %>‚≠ê<% } %>
                                            </span>

                                            <span class="badge bg-info">
                                                <% if (task.urgencyLevel === 'urgent') { %>üî•
                                                <% } else if (task.urgencyLevel === 'important') { %>‚ö°
                                                <% } else if (task.urgencyLevel === 'normal') { %>üìÖ
                                                <% } else if (task.urgencyLevel === 'delayed') { %>üïê<% } %>
                                            </span>
                                        </div>

                                        <!-- ‰ªªÂä°ÊèèËø∞ -->
                                        <% if (task.description) { %>
                                            <p class="card-text text-muted small mb-2">
                                                <%- task.description.length > 60 ?
                                                    task.description.substring(0, 60) + '...' :
                                                    task.description %>
                                            </p>
                                        <% } %>

                                        <!-- ‰ªªÂä°‰ø°ÊÅØ -->
                                        <div class="task-info">
                                            <!-- Á¨¨‰∏ÄË°åÔºöÂàõÂª∫‰∫∫ -->
                                            <div class="info-row mb-1">
                                                <i class="fas fa-user text-muted me-1" style="font-size: 12px;"></i>
                                                <small class="text-muted">
                                                    <%= task.publisher ? (task.publisher.firstName + ' ' + task.publisher.lastName).trim() || task.publisher.username : 'Êú™Áü•' %>
                                                </small>
                                            </div>

                                            <!-- Á¨¨‰∫åË°åÔºöÂ∑•Êó∂‰ø°ÊÅØ -->
                                            <div class="info-row mb-1">
                                                <% if (task.estimatedHours) { %>
                                                    <i class="fas fa-clock text-muted me-1" style="font-size: 12px;"></i>
                                                    <small class="text-muted">È¢ÑËÆ° <%= task.estimatedHours %>h</small>
                                                <% } %>
                                                <% if (task.actualHours) { %>
                                                    <span class="ms-2">
                                                        <i class="fas fa-stopwatch text-muted me-1" style="font-size: 12px;"></i>
                                                        <small class="text-muted">ÂÆûÈôÖ <%= task.actualHours %>h</small>
                                                    </span>
                                                <% } %>
                                            </div>

                                            <!-- Á¨¨‰∏âË°åÔºöÊó∂Èó¥‰ø°ÊÅØ -->
                                            <div class="info-row mb-1">
                                                <% if (task.startDate) { %>
                                                    <i class="fas fa-play text-muted me-1" style="font-size: 12px;"></i>
                                                    <small class="text-muted"><%= new Date(task.startDate).toLocaleDateString('zh-CN') %></small>
                                                <% } %>
                                                <% if (task.dueDate) { %>
                                                    <span class="<%= task.startDate ? 'ms-2' : '' %>">
                                                        <i class="fas fa-flag text-muted me-1" style="font-size: 12px;"></i>
                                                        <small class="text-muted"><%= new Date(task.dueDate).toLocaleDateString('zh-CN') %></small>
                                                    </span>
                                                <% } %>
                                            </div>

                                            <!-- Á¨¨ÂõõË°åÔºöËøõÂ∫¶Êù° -->
                                            <% const progress = task.progress || 0; %>
                                            <div class="info-row">
                                                <div class="d-flex align-items-center w-100">
                                                    <i class="fas fa-chart-line text-muted me-1" style="font-size: 12px;"></i>
                                                    <div class="progress flex-grow-1 me-2" style="height: 4px;">
                                                        <div class="progress-bar
                                                            <% if (progress === 0) { %>bg-secondary
                                                            <% } else if (progress < 25) { %>bg-info
                                                            <% } else if (progress < 50) { %>bg-primary
                                                            <% } else if (progress < 75) { %>bg-warning
                                                            <% } else if (progress < 100) { %>bg-success
                                                            <% } else { %>bg-success
                                                            <% } %>"
                                                            role="progressbar"
                                                            style="width: <%= progress %>%;"
                                                            aria-valuenow="<%= progress %>"
                                                            aria-valuemin="0"
                                                            aria-valuemax="100">
                                                        </div>
                                                    </div>
                                                    <small class="text-muted progress-text"><%= progress %>%</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="empty-column text-center py-4">
                            <i class="fas fa-inbox fa-2x text-muted mb-2"></i>
                            <p class="text-muted mb-0">ÊöÇÊó†‰ªªÂä°</p>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    <% }); %>
</div>

<style>
.kanban-board {
    min-height: 600px;
    overflow-x: auto;
    padding-bottom: 20px;
}

.kanban-column {
    background: #f8f9fa;
    border-radius: 8px;
    overflow: hidden;
    height: fit-content;
    min-height: 500px;
    min-width: 280px;
}

/* Âú®Â∞èÂ±èÂπï‰∏äÁ°Æ‰øùÁúãÊùøÂàó‰∏ç‰ºöÂ§™Á™Ñ */
@media (max-width: 1200px) {
    .kanban-board .col-lg-2 {
        flex: 0 0 280px;
        max-width: 280px;
    }
}

.kanban-header {
    padding: 15px;
    border-radius: 8px 8px 0 0;
}

.kanban-body {
    padding: 15px;
    min-height: 450px;
}

.kanban-card {
    cursor: move;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.kanban-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}

.kanban-card .card {
    border: 1px solid #dee2e6;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.kanban-card .card:hover {
    border-color: #007bff;
}

.empty-column {
    border: 2px dashed #dee2e6;
    border-radius: 8px;
    margin: 10px 0;
}

.task-meta .badge {
    font-size: 0.7em;
}

.reward-info {
    font-weight: 500;
}

.task-info {
    font-size: 0.8em;
}

.task-info .info-row {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
}

.task-info .progress-text {
    font-size: 0.7rem;
    min-width: 24px;
    text-align: right;
}

.task-type-badge-kanban {
    font-size: 0.75em !important;
    padding: 0.4em 0.6em !important;
    font-weight: 500 !important;
    display: block;
    width: fit-content;
}

/* Ëá™ÂÆö‰πâÁ¥´Ëâ≤ËÉåÊôØ */
.bg-purple {
    background-color: #6f42c1 !important;
    color: white !important;
}

/* ÊãñÊãΩÊ†∑Âºè */
.kanban-card.dragging {
    opacity: 0.5;
    transform: rotate(5deg);
    z-index: 1000;
}

.kanban-body.drag-over {
    background-color: #e3f2fd;
    border: 2px dashed #2196f3;
    border-radius: 8px;
}

/* Êõ¥Êñ∞‰∏≠ÁöÑ‰ªªÂä°Âç°ÁâáÊ†∑Âºè */
.kanban-card.updating {
    opacity: 0.7;
    pointer-events: none;
    position: relative;
}

.kanban-card.updating::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 123, 255, 0.1);
    border: 2px solid #007bff;
    border-radius: 8px;
    animation: pulse 1.5s infinite;
}

@keyframes pulse {
    0% { opacity: 0.3; }
    50% { opacity: 0.7; }
    100% { opacity: 0.3; }
}

/* ÊãñÊãΩÊó∂ÁöÑÂàóÈ´ò‰∫Æ */
.kanban-body.drag-over::before {
    content: 'ÊîæÁΩÆ‰ªªÂä°Âà∞Ê≠§Âàó';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(33, 150, 243, 0.9);
    color: white;
    padding: 8px 16px;
    border-radius: 4px;
    font-size: 14px;
    font-weight: 500;
    z-index: 10;
    pointer-events: none;
}

/* ÁúãÊùøÂç°ÁâáÊìç‰ΩúÊåâÈíÆÊ†∑Âºè */
.kanban-card .dropdown-toggle {
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    border: none;
    background: transparent;
    color: #6c757d;
}

.kanban-card .dropdown-toggle:hover {
    background: #f8f9fa;
    color: #495057;
}

.kanban-card .dropdown-menu {
    z-index: 1050;
    font-size: 0.875rem;
}

.kanban-card .card-title {
    line-height: 1.3;
    margin-right: 0.5rem;
}
</style>

<script>
$(document).ready(function() {
    // ÂàùÂßãÂåñÊãñÊãΩÂäüËÉΩ
    initDragAndDrop();

    // ‰ªªÂä°Âç°ÁâáÁÇπÂáª‰∫ã‰ª∂
    $('.kanban-card').click(function(e) {
        if (!$(e.target).closest('a').length) {
            const taskId = $(this).data('task-id');
            window.location.href = `/tasks/${taskId}`;
        }
    });
});

// ÂàùÂßãÂåñÊãñÊãΩÂäüËÉΩ
function initDragAndDrop() {
    // ‰Ωø‰ªªÂä°Âç°ÁâáÂèØÊãñÊãΩ
    $('.kanban-card').attr('draggable', true);

    // ÊãñÊãΩÂºÄÂßã
    $(document).on('dragstart', '.kanban-card', function(e) {
        const $card = $(this);
        $card.addClass('dragging');

        // ËÆæÁΩÆÊãñÊãΩÊï∞ÊçÆ
        const taskId = $card.data('task-id');
        const taskTitle = $card.find('.card-title a').text().trim();

        e.originalEvent.dataTransfer.setData('text/plain', taskId);
        e.originalEvent.dataTransfer.effectAllowed = 'move';

        // ËÆæÁΩÆÊãñÊãΩÂõæÂÉèÔºàÂèØÈÄâÔºâ
        const dragImage = $card.clone().css({
            'transform': 'rotate(5deg)',
            'opacity': '0.8'
        })[0];

        // Â≠òÂÇ®ÂéüÂßã‰ΩçÁΩÆ‰ø°ÊÅØÔºåÁî®‰∫éÂèØËÉΩÁöÑÂõûÊªö
        $card.data('original-column', $card.parent());

        console.log(`ÂºÄÂßãÊãñÊãΩ‰ªªÂä°: ${taskTitle} (ID: ${taskId})`);
    });

    // ÊãñÊãΩÁªìÊùü
    $(document).on('dragend', '.kanban-card', function(e) {
        const $card = $(this);
        $card.removeClass('dragging');
        $('.kanban-body').removeClass('drag-over');

        // Ê∏ÖÁêÜÊãñÊãΩÁä∂ÊÄÅ
        setTimeout(() => {
            $card.removeData('original-column');
        }, 1000);
    });

    // ÊãñÊãΩËøõÂÖ•Âàó
    $(document).on('dragover', '.kanban-body', function(e) {
        e.preventDefault();
        e.originalEvent.dataTransfer.dropEffect = 'move';

        const $body = $(this);
        if (!$body.hasClass('drag-over')) {
            $body.addClass('drag-over');

            // Ëé∑ÂèñÁä∂ÊÄÅ‰ø°ÊÅØÊòæÁ§∫ÊèêÁ§∫
            const status = $body.data('status');
            const statusTitle = $body.parent().find('.kanban-header h5').text().trim();
            console.log(`ÊãñÊãΩÊÇ¨ÂÅúÂú®: ${statusTitle}`);
        }
    });

    // ÊãñÊãΩÁ¶ªÂºÄÂàó
    $(document).on('dragleave', '.kanban-body', function(e) {
        const $body = $(this);

        // Ê£ÄÊü•ÊòØÂê¶ÁúüÁöÑÁ¶ªÂºÄ‰∫ÜÂàóÔºàËÄå‰∏çÊòØËøõÂÖ•Â≠êÂÖÉÁ¥†Ôºâ
        const rect = this.getBoundingClientRect();
        const x = e.originalEvent.clientX;
        const y = e.originalEvent.clientY;

        if (x < rect.left || x > rect.right || y < rect.top || y > rect.bottom) {
            $body.removeClass('drag-over');
        }
    });

    // ÊîæÁΩÆ‰ªªÂä°
    $(document).on('drop', '.kanban-body', function(e) {
        e.preventDefault();
        $(this).removeClass('drag-over');

        const taskId = e.originalEvent.dataTransfer.getData('text/plain');
        const newStatus = $(this).data('status');
        const $taskCard = $(`.kanban-card[data-task-id="${taskId}"]`);
        const currentStatus = $taskCard.parent().data('status');

        // Ê£ÄÊü•ÊòØÂê¶ÁúüÁöÑÈúÄË¶ÅÁßªÂä®ÔºàÁä∂ÊÄÅÊòØÂê¶ÊîπÂèòÔºâ
        if (currentStatus === newStatus) {
            showToast('info', '‰ªªÂä°Â∑≤Âú®Ê≠§Áä∂ÊÄÅÂàó‰∏≠');
            return;
        }

        // ÁßªÂä®Âç°ÁâáÂà∞Êñ∞Âàó
        $taskCard.appendTo(this);

        // Ë∞ÉÁî®APIÊõ¥Êñ∞‰ªªÂä°Áä∂ÊÄÅ
        updateTaskStatus(taskId, newStatus);
    });
}

// Êõ¥Êñ∞‰ªªÂä°Áä∂ÊÄÅ
function updateTaskStatus(taskId, newStatus) {
    const $taskCard = $(`.kanban-card[data-task-id="${taskId}"]`);
    const originalColumn = $taskCard.parent();

    // ÊòæÁ§∫Âä†ËΩΩÁä∂ÊÄÅ
    $taskCard.addClass('updating');
    showToast('info', 'Ê≠£Âú®Êõ¥Êñ∞‰ªªÂä°Áä∂ÊÄÅ...');

    // Ë∞ÉÁî®APIÊõ¥Êñ∞‰ªªÂä°Áä∂ÊÄÅ
    $.ajax({
        url: `/tasks/${taskId}/status`,
        method: 'POST',
        data: { status: newStatus },
        success: function(response) {
            if (response.success) {
                showToast('success', '‰ªªÂä°Áä∂ÊÄÅÊõ¥Êñ∞ÊàêÂäüÔºÅ');

                // Êõ¥Êñ∞‰ªªÂä°ËÆ°Êï∞
                updateTaskCounts();

                // ÁßªÈô§Âä†ËΩΩÁä∂ÊÄÅ
                $taskCard.removeClass('updating');

                // Â¶ÇÊûúÊúâÁä∂ÊÄÅÂèòÊõ¥ÁöÑÁâπÊÆäÂ§ÑÁêÜ
                if (response.data && response.data.startDate) {
                    console.log('‰ªªÂä°Â∑≤ÂºÄÂßã:', response.data.startDate);
                }
                if (response.data && response.data.completedAt) {
                    console.log('‰ªªÂä°Â∑≤ÂÆåÊàê:', response.data.completedAt);
                }
            } else {
                // Êõ¥Êñ∞Â§±Ë¥•ÔºåÂõûÊªö‰ªªÂä°Âç°Áâá‰ΩçÁΩÆ
                rollbackTaskPosition($taskCard, originalColumn);
                showToast('error', response.message || 'Êõ¥Êñ∞‰ªªÂä°Áä∂ÊÄÅÂ§±Ë¥•');
            }
        },
        error: function(xhr) {
            // Êõ¥Êñ∞Â§±Ë¥•ÔºåÂõûÊªö‰ªªÂä°Âç°Áâá‰ΩçÁΩÆ
            rollbackTaskPosition($taskCard, originalColumn);

            const response = xhr.responseJSON;
            let errorMessage = 'Êõ¥Êñ∞‰ªªÂä°Áä∂ÊÄÅÂ§±Ë¥•';

            if (response && response.message) {
                errorMessage = response.message;
            } else if (xhr.status === 403) {
                errorMessage = 'ÊÇ®Ê≤°ÊúâÊùÉÈôêÊõ¥ÊîπÊ≠§‰ªªÂä°Áä∂ÊÄÅ';
            } else if (xhr.status === 404) {
                errorMessage = '‰ªªÂä°‰∏çÂ≠òÂú®';
            } else if (xhr.status === 400) {
                errorMessage = 'Êó†ÊïàÁöÑÁä∂ÊÄÅÂÄº';
            }

            showToast('error', errorMessage);
            console.error('Êõ¥Êñ∞‰ªªÂä°Áä∂ÊÄÅÂ§±Ë¥•:', xhr);
        },
        complete: function() {
            $taskCard.removeClass('updating');
        }
    });
}

// ÂõûÊªö‰ªªÂä°Âç°Áâá‰ΩçÁΩÆ
function rollbackTaskPosition($taskCard, originalColumn) {
    $taskCard.appendTo(originalColumn);
    showToast('info', '‰ªªÂä°‰ΩçÁΩÆÂ∑≤ÊÅ¢Â§ç');
}

// Êõ¥Êñ∞‰ªªÂä°ËÆ°Êï∞
function updateTaskCounts() {
    $('.kanban-column').each(function() {
        const $column = $(this);
        const $body = $column.find('.kanban-body');
        const $badge = $column.find('.kanban-header .badge');
        const taskCount = $body.find('.kanban-card').length;

        $badge.text(taskCount);

        // Â¶ÇÊûúÂàó‰∏∫Á©∫ÔºåÊòæÁ§∫Á©∫Áä∂ÊÄÅ
        if (taskCount === 0) {
            if ($body.find('.empty-column').length === 0) {
                $body.append(`
                    <div class="empty-column text-center py-4">
                        <i class="fas fa-inbox fa-2x text-muted mb-2"></i>
                        <p class="text-muted mb-0">ÊöÇÊó†‰ªªÂä°</p>
                    </div>
                `);
            }
        } else {
            $body.find('.empty-column').remove();
        }
    });
}

// ÊòæÁ§∫ÊèêÁ§∫Ê∂àÊÅØ
function showToast(type, message) {
    // ÂàõÂª∫ÊèêÁ§∫ÂÖÉÁ¥†
    const toast = $(`
        <div class="toast align-items-center text-white bg-${type === 'success' ? 'success' : type === 'info' ? 'info' : 'danger'} border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    <i class="fas fa-${type === 'success' ? 'check' : type === 'info' ? 'info-circle' : 'exclamation-triangle'} me-2"></i>
                    ${message}
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    `);

    // Ê∑ªÂä†Âà∞È°µÈù¢
    let toastContainer = $('#toast-container');
    if (toastContainer.length === 0) {
        toastContainer = $('<div id="toast-container" class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1055;"></div>');
        $('body').append(toastContainer);
    }

    toastContainer.append(toast);

    // ÊòæÁ§∫ÊèêÁ§∫
    const bsToast = new bootstrap.Toast(toast[0]);
    bsToast.show();

    // Ëá™Âä®ÁßªÈô§
    toast.on('hidden.bs.toast', function() {
        $(this).remove();
    });
}

// ÂΩíÊ°£/ÂèñÊ∂àÂΩíÊ°£‰ªªÂä°ÂáΩÊï∞
function toggleArchiveTask(taskId, isArchive) {
    const action = isArchive ? 'ÂΩíÊ°£' : 'ÂèñÊ∂àÂΩíÊ°£';
    const confirmMessage = isArchive
        ? 'Á°ÆÂÆöË¶ÅÂΩíÊ°£Ê≠§‰ªªÂä°ÂêóÔºü\n\nÂΩíÊ°£ÂêéÁöÑ‰ªªÂä°Â∞Ü‰ªéÂ∏∏ËßÑËßÜÂõæ‰∏≠ÈöêËóèÔºåÈúÄË¶ÅÂú®Á≠õÈÄâÂô®‰∏≠ÈÄâÊã©"Â∑≤ÂΩíÊ°£"ÊâçËÉΩÊü•Áúã„ÄÇ'
        : 'Á°ÆÂÆöË¶ÅÂèñÊ∂àÂΩíÊ°£Ê≠§‰ªªÂä°ÂêóÔºü\n\nÂèñÊ∂àÂΩíÊ°£ÂêéÁöÑ‰ªªÂä°Â∞ÜÈáçÊñ∞ÊòæÁ§∫Âú®Â∏∏ËßÑËßÜÂõæ‰∏≠„ÄÇ';

    if (confirm(confirmMessage)) {
        const url = isArchive ? `/tasks/${taskId}/archive` : `/tasks/${taskId}/unarchive`;

        // ÂèëÈÄÅAJAXËØ∑Ê±Ç
        $.ajax({
            url: url,
            method: 'POST',
            dataType: 'json',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            success: function(response) {
                if (response.success) {
                    showToast('success', response.message);
                    // Âà∑Êñ∞È°µÈù¢‰ª•Êõ¥Êñ∞‰ªªÂä°ÂàóË°®
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showToast('error', response.message || `${action}Â§±Ë¥•`);
                }
            },
            error: function(xhr, status, error) {
                console.error('ÂΩíÊ°£Êìç‰ΩúÈîôËØØ:', { xhr, status, error });
                const errorMsg = xhr.responseJSON?.message || `${action}Â§±Ë¥•Ôºö${error}`;
                showToast('error', errorMsg);
            }
        });
    }
}
</script>

<%- include('../partials/footer') %>
